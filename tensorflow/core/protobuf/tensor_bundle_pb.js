/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_tensor_shape_pb = require('../../../tensorflow/core/framework/tensor_shape_pb.js');
var tensorflow_core_framework_tensor_slice_pb = require('../../../tensorflow/core/framework/tensor_slice_pb.js');
var tensorflow_core_framework_types_pb = require('../../../tensorflow/core/framework/types_pb.js');
var tensorflow_core_framework_versions_pb = require('../../../tensorflow/core/framework/versions_pb.js');
goog.exportSymbol('proto.tensorflow.BundleEntryProto', null, global);
goog.exportSymbol('proto.tensorflow.BundleHeaderProto', null, global);
goog.exportSymbol('proto.tensorflow.BundleHeaderProto.Endianness', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.BundleHeaderProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.BundleHeaderProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.BundleHeaderProto.displayName = 'proto.tensorflow.BundleHeaderProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.BundleHeaderProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.BundleHeaderProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.BundleHeaderProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.BundleHeaderProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    numShards: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endianness: jspb.Message.getFieldWithDefault(msg, 2, 0),
    version: (f = msg.getVersion()) && tensorflow_core_framework_versions_pb.VersionDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.BundleHeaderProto}
 */
proto.tensorflow.BundleHeaderProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.BundleHeaderProto;
  return proto.tensorflow.BundleHeaderProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.BundleHeaderProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.BundleHeaderProto}
 */
proto.tensorflow.BundleHeaderProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumShards(value);
      break;
    case 2:
      var value = /** @type {!proto.tensorflow.BundleHeaderProto.Endianness} */ (reader.readEnum());
      msg.setEndianness(value);
      break;
    case 3:
      var value = new tensorflow_core_framework_versions_pb.VersionDef;
      reader.readMessage(value,tensorflow_core_framework_versions_pb.VersionDef.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.BundleHeaderProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.BundleHeaderProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.BundleHeaderProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.BundleHeaderProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumShards();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEndianness();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tensorflow_core_framework_versions_pb.VersionDef.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.BundleHeaderProto.Endianness = {
  LITTLE: 0,
  BIG: 1
};

/**
 * optional int32 num_shards = 1;
 * @return {number}
 */
proto.tensorflow.BundleHeaderProto.prototype.getNumShards = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.BundleHeaderProto.prototype.setNumShards = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Endianness endianness = 2;
 * @return {!proto.tensorflow.BundleHeaderProto.Endianness}
 */
proto.tensorflow.BundleHeaderProto.prototype.getEndianness = function() {
  return /** @type {!proto.tensorflow.BundleHeaderProto.Endianness} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.tensorflow.BundleHeaderProto.Endianness} value */
proto.tensorflow.BundleHeaderProto.prototype.setEndianness = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional VersionDef version = 3;
 * @return {?proto.tensorflow.VersionDef}
 */
proto.tensorflow.BundleHeaderProto.prototype.getVersion = function() {
  return /** @type{?proto.tensorflow.VersionDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_versions_pb.VersionDef, 3));
};


/** @param {?proto.tensorflow.VersionDef|undefined} value */
proto.tensorflow.BundleHeaderProto.prototype.setVersion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.BundleHeaderProto.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.BundleHeaderProto.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.BundleEntryProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.BundleEntryProto.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.BundleEntryProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.BundleEntryProto.displayName = 'proto.tensorflow.BundleEntryProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.BundleEntryProto.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.BundleEntryProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.BundleEntryProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.BundleEntryProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.BundleEntryProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    dtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shape: (f = msg.getShape()) && tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.toObject(includeInstance, f),
    shardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0),
    crc32c: jspb.Message.getFieldWithDefault(msg, 6, 0),
    slicesList: jspb.Message.toObjectList(msg.getSlicesList(),
    tensorflow_core_framework_tensor_slice_pb.TensorSliceProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.BundleEntryProto}
 */
proto.tensorflow.BundleEntryProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.BundleEntryProto;
  return proto.tensorflow.BundleEntryProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.BundleEntryProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.BundleEntryProto}
 */
proto.tensorflow.BundleEntryProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tensorflow.DataType} */ (reader.readEnum());
      msg.setDtype(value);
      break;
    case 2:
      var value = new tensorflow_core_framework_tensor_shape_pb.TensorShapeProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.deserializeBinaryFromReader);
      msg.setShape(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShardId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCrc32c(value);
      break;
    case 7:
      var value = new tensorflow_core_framework_tensor_slice_pb.TensorSliceProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_slice_pb.TensorSliceProto.deserializeBinaryFromReader);
      msg.addSlices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.BundleEntryProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.BundleEntryProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.BundleEntryProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.BundleEntryProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getShape();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.serializeBinaryToWriter
    );
  }
  f = message.getShardId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCrc32c();
  if (f !== 0) {
    writer.writeFixed32(
      6,
      f
    );
  }
  f = message.getSlicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      tensorflow_core_framework_tensor_slice_pb.TensorSliceProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataType dtype = 1;
 * @return {!proto.tensorflow.DataType}
 */
proto.tensorflow.BundleEntryProto.prototype.getDtype = function() {
  return /** @type {!proto.tensorflow.DataType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tensorflow.DataType} value */
proto.tensorflow.BundleEntryProto.prototype.setDtype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TensorShapeProto shape = 2;
 * @return {?proto.tensorflow.TensorShapeProto}
 */
proto.tensorflow.BundleEntryProto.prototype.getShape = function() {
  return /** @type{?proto.tensorflow.TensorShapeProto} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_tensor_shape_pb.TensorShapeProto, 2));
};


/** @param {?proto.tensorflow.TensorShapeProto|undefined} value */
proto.tensorflow.BundleEntryProto.prototype.setShape = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.BundleEntryProto.prototype.clearShape = function() {
  this.setShape(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.BundleEntryProto.prototype.hasShape = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 shard_id = 3;
 * @return {number}
 */
proto.tensorflow.BundleEntryProto.prototype.getShardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.BundleEntryProto.prototype.setShardId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 offset = 4;
 * @return {number}
 */
proto.tensorflow.BundleEntryProto.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.BundleEntryProto.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 size = 5;
 * @return {number}
 */
proto.tensorflow.BundleEntryProto.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tensorflow.BundleEntryProto.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional fixed32 crc32c = 6;
 * @return {number}
 */
proto.tensorflow.BundleEntryProto.prototype.getCrc32c = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tensorflow.BundleEntryProto.prototype.setCrc32c = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated TensorSliceProto slices = 7;
 * @return {!Array.<!proto.tensorflow.TensorSliceProto>}
 */
proto.tensorflow.BundleEntryProto.prototype.getSlicesList = function() {
  return /** @type{!Array.<!proto.tensorflow.TensorSliceProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_tensor_slice_pb.TensorSliceProto, 7));
};


/** @param {!Array.<!proto.tensorflow.TensorSliceProto>} value */
proto.tensorflow.BundleEntryProto.prototype.setSlicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.tensorflow.TensorSliceProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorSliceProto}
 */
proto.tensorflow.BundleEntryProto.prototype.addSlices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tensorflow.TensorSliceProto, opt_index);
};


proto.tensorflow.BundleEntryProto.prototype.clearSlicesList = function() {
  this.setSlicesList([]);
};


goog.object.extend(exports, proto.tensorflow);
