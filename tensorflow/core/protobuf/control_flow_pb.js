/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tensorflow.CondContextDef', null, global);
goog.exportSymbol('proto.tensorflow.ControlFlowContextDef', null, global);
goog.exportSymbol('proto.tensorflow.ValuesDef', null, global);
goog.exportSymbol('proto.tensorflow.WhileContextDef', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ValuesDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.ValuesDef.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.ValuesDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ValuesDef.displayName = 'proto.tensorflow.ValuesDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.ValuesDef.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ValuesDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ValuesDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ValuesDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ValuesDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedField(msg, 1),
    externalValuesMap: (f = msg.getExternalValuesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ValuesDef}
 */
proto.tensorflow.ValuesDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ValuesDef;
  return proto.tensorflow.ValuesDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ValuesDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ValuesDef}
 */
proto.tensorflow.ValuesDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 2:
      var value = msg.getExternalValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ValuesDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ValuesDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ValuesDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ValuesDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExternalValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * repeated string values = 1;
 * @return {!Array.<string>}
 */
proto.tensorflow.ValuesDef.prototype.getValuesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.tensorflow.ValuesDef.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.ValuesDef.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.tensorflow.ValuesDef.prototype.clearValuesList = function() {
  this.setValuesList([]);
};


/**
 * map<string, string> external_values = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorflow.ValuesDef.prototype.getExternalValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.tensorflow.ValuesDef.prototype.clearExternalValuesMap = function() {
  this.getExternalValuesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ControlFlowContextDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.ControlFlowContextDef.oneofGroups_);
};
goog.inherits(proto.tensorflow.ControlFlowContextDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ControlFlowContextDef.displayName = 'proto.tensorflow.ControlFlowContextDef';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.ControlFlowContextDef.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tensorflow.ControlFlowContextDef.CtxtCase = {
  CTXT_NOT_SET: 0,
  COND_CTXT: 1,
  WHILE_CTXT: 2
};

/**
 * @return {proto.tensorflow.ControlFlowContextDef.CtxtCase}
 */
proto.tensorflow.ControlFlowContextDef.prototype.getCtxtCase = function() {
  return /** @type {proto.tensorflow.ControlFlowContextDef.CtxtCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.ControlFlowContextDef.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ControlFlowContextDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ControlFlowContextDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ControlFlowContextDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ControlFlowContextDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    condCtxt: (f = msg.getCondCtxt()) && proto.tensorflow.CondContextDef.toObject(includeInstance, f),
    whileCtxt: (f = msg.getWhileCtxt()) && proto.tensorflow.WhileContextDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ControlFlowContextDef}
 */
proto.tensorflow.ControlFlowContextDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ControlFlowContextDef;
  return proto.tensorflow.ControlFlowContextDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ControlFlowContextDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ControlFlowContextDef}
 */
proto.tensorflow.ControlFlowContextDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.CondContextDef;
      reader.readMessage(value,proto.tensorflow.CondContextDef.deserializeBinaryFromReader);
      msg.setCondCtxt(value);
      break;
    case 2:
      var value = new proto.tensorflow.WhileContextDef;
      reader.readMessage(value,proto.tensorflow.WhileContextDef.deserializeBinaryFromReader);
      msg.setWhileCtxt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ControlFlowContextDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ControlFlowContextDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ControlFlowContextDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ControlFlowContextDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCondCtxt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tensorflow.CondContextDef.serializeBinaryToWriter
    );
  }
  f = message.getWhileCtxt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.WhileContextDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional CondContextDef cond_ctxt = 1;
 * @return {?proto.tensorflow.CondContextDef}
 */
proto.tensorflow.ControlFlowContextDef.prototype.getCondCtxt = function() {
  return /** @type{?proto.tensorflow.CondContextDef} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CondContextDef, 1));
};


/** @param {?proto.tensorflow.CondContextDef|undefined} value */
proto.tensorflow.ControlFlowContextDef.prototype.setCondCtxt = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.ControlFlowContextDef.oneofGroups_[0], value);
};


proto.tensorflow.ControlFlowContextDef.prototype.clearCondCtxt = function() {
  this.setCondCtxt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ControlFlowContextDef.prototype.hasCondCtxt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WhileContextDef while_ctxt = 2;
 * @return {?proto.tensorflow.WhileContextDef}
 */
proto.tensorflow.ControlFlowContextDef.prototype.getWhileCtxt = function() {
  return /** @type{?proto.tensorflow.WhileContextDef} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.WhileContextDef, 2));
};


/** @param {?proto.tensorflow.WhileContextDef|undefined} value */
proto.tensorflow.ControlFlowContextDef.prototype.setWhileCtxt = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.ControlFlowContextDef.oneofGroups_[0], value);
};


proto.tensorflow.ControlFlowContextDef.prototype.clearWhileCtxt = function() {
  this.setWhileCtxt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ControlFlowContextDef.prototype.hasWhileCtxt = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CondContextDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.CondContextDef.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.CondContextDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CondContextDef.displayName = 'proto.tensorflow.CondContextDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.CondContextDef.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CondContextDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CondContextDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CondContextDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CondContextDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    predName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pivotName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 4, 0),
    valuesDef: (f = msg.getValuesDef()) && proto.tensorflow.ValuesDef.toObject(includeInstance, f),
    nestedContextsList: jspb.Message.toObjectList(msg.getNestedContextsList(),
    proto.tensorflow.ControlFlowContextDef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CondContextDef}
 */
proto.tensorflow.CondContextDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CondContextDef;
  return proto.tensorflow.CondContextDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CondContextDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CondContextDef}
 */
proto.tensorflow.CondContextDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPivotName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBranch(value);
      break;
    case 5:
      var value = new proto.tensorflow.ValuesDef;
      reader.readMessage(value,proto.tensorflow.ValuesDef.deserializeBinaryFromReader);
      msg.setValuesDef(value);
      break;
    case 6:
      var value = new proto.tensorflow.ControlFlowContextDef;
      reader.readMessage(value,proto.tensorflow.ControlFlowContextDef.deserializeBinaryFromReader);
      msg.addNestedContexts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CondContextDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CondContextDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CondContextDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CondContextDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPredName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPivotName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBranch();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getValuesDef();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.ValuesDef.serializeBinaryToWriter
    );
  }
  f = message.getNestedContextsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.tensorflow.ControlFlowContextDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string context_name = 1;
 * @return {string}
 */
proto.tensorflow.CondContextDef.prototype.getContextName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.CondContextDef.prototype.setContextName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pred_name = 2;
 * @return {string}
 */
proto.tensorflow.CondContextDef.prototype.getPredName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.CondContextDef.prototype.setPredName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pivot_name = 3;
 * @return {string}
 */
proto.tensorflow.CondContextDef.prototype.getPivotName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tensorflow.CondContextDef.prototype.setPivotName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 branch = 4;
 * @return {number}
 */
proto.tensorflow.CondContextDef.prototype.getBranch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.CondContextDef.prototype.setBranch = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ValuesDef values_def = 5;
 * @return {?proto.tensorflow.ValuesDef}
 */
proto.tensorflow.CondContextDef.prototype.getValuesDef = function() {
  return /** @type{?proto.tensorflow.ValuesDef} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ValuesDef, 5));
};


/** @param {?proto.tensorflow.ValuesDef|undefined} value */
proto.tensorflow.CondContextDef.prototype.setValuesDef = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tensorflow.CondContextDef.prototype.clearValuesDef = function() {
  this.setValuesDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.CondContextDef.prototype.hasValuesDef = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ControlFlowContextDef nested_contexts = 6;
 * @return {!Array.<!proto.tensorflow.ControlFlowContextDef>}
 */
proto.tensorflow.CondContextDef.prototype.getNestedContextsList = function() {
  return /** @type{!Array.<!proto.tensorflow.ControlFlowContextDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.ControlFlowContextDef, 6));
};


/** @param {!Array.<!proto.tensorflow.ControlFlowContextDef>} value */
proto.tensorflow.CondContextDef.prototype.setNestedContextsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.tensorflow.ControlFlowContextDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.ControlFlowContextDef}
 */
proto.tensorflow.CondContextDef.prototype.addNestedContexts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.tensorflow.ControlFlowContextDef, opt_index);
};


proto.tensorflow.CondContextDef.prototype.clearNestedContextsList = function() {
  this.setNestedContextsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.WhileContextDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.WhileContextDef.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.WhileContextDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.WhileContextDef.displayName = 'proto.tensorflow.WhileContextDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.WhileContextDef.repeatedFields_ = [8,10,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.WhileContextDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.WhileContextDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.WhileContextDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.WhileContextDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parallelIterations: jspb.Message.getFieldWithDefault(msg, 2, 0),
    backProp: jspb.Message.getFieldWithDefault(msg, 3, false),
    swapMemory: jspb.Message.getFieldWithDefault(msg, 4, false),
    pivotName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pivotForPredName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pivotForBodyName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    loopExitNamesList: jspb.Message.getRepeatedField(msg, 8),
    loopEnterNamesList: jspb.Message.getRepeatedField(msg, 10),
    valuesDef: (f = msg.getValuesDef()) && proto.tensorflow.ValuesDef.toObject(includeInstance, f),
    maximumIterationsName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    nestedContextsList: jspb.Message.toObjectList(msg.getNestedContextsList(),
    proto.tensorflow.ControlFlowContextDef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.WhileContextDef}
 */
proto.tensorflow.WhileContextDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.WhileContextDef;
  return proto.tensorflow.WhileContextDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.WhileContextDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.WhileContextDef}
 */
proto.tensorflow.WhileContextDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParallelIterations(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackProp(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwapMemory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPivotName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPivotForPredName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPivotForBodyName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addLoopExitNames(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addLoopEnterNames(value);
      break;
    case 9:
      var value = new proto.tensorflow.ValuesDef;
      reader.readMessage(value,proto.tensorflow.ValuesDef.deserializeBinaryFromReader);
      msg.setValuesDef(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaximumIterationsName(value);
      break;
    case 12:
      var value = new proto.tensorflow.ControlFlowContextDef;
      reader.readMessage(value,proto.tensorflow.ControlFlowContextDef.deserializeBinaryFromReader);
      msg.addNestedContexts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.WhileContextDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.WhileContextDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.WhileContextDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.WhileContextDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParallelIterations();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBackProp();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSwapMemory();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPivotName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPivotForPredName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPivotForBodyName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLoopExitNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getLoopEnterNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getValuesDef();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.tensorflow.ValuesDef.serializeBinaryToWriter
    );
  }
  f = message.getMaximumIterationsName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getNestedContextsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.tensorflow.ControlFlowContextDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string context_name = 1;
 * @return {string}
 */
proto.tensorflow.WhileContextDef.prototype.getContextName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.WhileContextDef.prototype.setContextName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 parallel_iterations = 2;
 * @return {number}
 */
proto.tensorflow.WhileContextDef.prototype.getParallelIterations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.WhileContextDef.prototype.setParallelIterations = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool back_prop = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.WhileContextDef.prototype.getBackProp = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.tensorflow.WhileContextDef.prototype.setBackProp = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool swap_memory = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.WhileContextDef.prototype.getSwapMemory = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.tensorflow.WhileContextDef.prototype.setSwapMemory = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string pivot_name = 5;
 * @return {string}
 */
proto.tensorflow.WhileContextDef.prototype.getPivotName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.WhileContextDef.prototype.setPivotName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pivot_for_pred_name = 6;
 * @return {string}
 */
proto.tensorflow.WhileContextDef.prototype.getPivotForPredName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.WhileContextDef.prototype.setPivotForPredName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pivot_for_body_name = 7;
 * @return {string}
 */
proto.tensorflow.WhileContextDef.prototype.getPivotForBodyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.tensorflow.WhileContextDef.prototype.setPivotForBodyName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string loop_exit_names = 8;
 * @return {!Array.<string>}
 */
proto.tensorflow.WhileContextDef.prototype.getLoopExitNamesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<string>} value */
proto.tensorflow.WhileContextDef.prototype.setLoopExitNamesList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.WhileContextDef.prototype.addLoopExitNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.tensorflow.WhileContextDef.prototype.clearLoopExitNamesList = function() {
  this.setLoopExitNamesList([]);
};


/**
 * repeated string loop_enter_names = 10;
 * @return {!Array.<string>}
 */
proto.tensorflow.WhileContextDef.prototype.getLoopEnterNamesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<string>} value */
proto.tensorflow.WhileContextDef.prototype.setLoopEnterNamesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.WhileContextDef.prototype.addLoopEnterNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.tensorflow.WhileContextDef.prototype.clearLoopEnterNamesList = function() {
  this.setLoopEnterNamesList([]);
};


/**
 * optional ValuesDef values_def = 9;
 * @return {?proto.tensorflow.ValuesDef}
 */
proto.tensorflow.WhileContextDef.prototype.getValuesDef = function() {
  return /** @type{?proto.tensorflow.ValuesDef} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ValuesDef, 9));
};


/** @param {?proto.tensorflow.ValuesDef|undefined} value */
proto.tensorflow.WhileContextDef.prototype.setValuesDef = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tensorflow.WhileContextDef.prototype.clearValuesDef = function() {
  this.setValuesDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.WhileContextDef.prototype.hasValuesDef = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string maximum_iterations_name = 11;
 * @return {string}
 */
proto.tensorflow.WhileContextDef.prototype.getMaximumIterationsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.tensorflow.WhileContextDef.prototype.setMaximumIterationsName = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated ControlFlowContextDef nested_contexts = 12;
 * @return {!Array.<!proto.tensorflow.ControlFlowContextDef>}
 */
proto.tensorflow.WhileContextDef.prototype.getNestedContextsList = function() {
  return /** @type{!Array.<!proto.tensorflow.ControlFlowContextDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.ControlFlowContextDef, 12));
};


/** @param {!Array.<!proto.tensorflow.ControlFlowContextDef>} value */
proto.tensorflow.WhileContextDef.prototype.setNestedContextsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.tensorflow.ControlFlowContextDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.ControlFlowContextDef}
 */
proto.tensorflow.WhileContextDef.prototype.addNestedContexts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.tensorflow.ControlFlowContextDef, opt_index);
};


proto.tensorflow.WhileContextDef.prototype.clearNestedContextsList = function() {
  this.setNestedContextsList([]);
};


goog.object.extend(exports, proto.tensorflow);
