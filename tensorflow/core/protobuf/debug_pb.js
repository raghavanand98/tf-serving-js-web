/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tensorflow.DebugOptions', null, global);
goog.exportSymbol('proto.tensorflow.DebugTensorWatch', null, global);
goog.exportSymbol('proto.tensorflow.DebuggedSourceFile', null, global);
goog.exportSymbol('proto.tensorflow.DebuggedSourceFiles', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebugTensorWatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.DebugTensorWatch.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.DebugTensorWatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebugTensorWatch.displayName = 'proto.tensorflow.DebugTensorWatch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.DebugTensorWatch.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebugTensorWatch.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebugTensorWatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebugTensorWatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugTensorWatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    outputSlot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    debugOpsList: jspb.Message.getRepeatedField(msg, 3),
    debugUrlsList: jspb.Message.getRepeatedField(msg, 4),
    tolerateDebugOpCreationFailures: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebugTensorWatch}
 */
proto.tensorflow.DebugTensorWatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebugTensorWatch;
  return proto.tensorflow.DebugTensorWatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebugTensorWatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebugTensorWatch}
 */
proto.tensorflow.DebugTensorWatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOutputSlot(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDebugOps(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addDebugUrls(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTolerateDebugOpCreationFailures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebugTensorWatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebugTensorWatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebugTensorWatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugTensorWatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOutputSlot();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDebugOpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getDebugUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTolerateDebugOpCreationFailures();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string node_name = 1;
 * @return {string}
 */
proto.tensorflow.DebugTensorWatch.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.DebugTensorWatch.prototype.setNodeName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 output_slot = 2;
 * @return {number}
 */
proto.tensorflow.DebugTensorWatch.prototype.getOutputSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.DebugTensorWatch.prototype.setOutputSlot = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string debug_ops = 3;
 * @return {!Array.<string>}
 */
proto.tensorflow.DebugTensorWatch.prototype.getDebugOpsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.tensorflow.DebugTensorWatch.prototype.setDebugOpsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.DebugTensorWatch.prototype.addDebugOps = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.tensorflow.DebugTensorWatch.prototype.clearDebugOpsList = function() {
  this.setDebugOpsList([]);
};


/**
 * repeated string debug_urls = 4;
 * @return {!Array.<string>}
 */
proto.tensorflow.DebugTensorWatch.prototype.getDebugUrlsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.tensorflow.DebugTensorWatch.prototype.setDebugUrlsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.DebugTensorWatch.prototype.addDebugUrls = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tensorflow.DebugTensorWatch.prototype.clearDebugUrlsList = function() {
  this.setDebugUrlsList([]);
};


/**
 * optional bool tolerate_debug_op_creation_failures = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.DebugTensorWatch.prototype.getTolerateDebugOpCreationFailures = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.tensorflow.DebugTensorWatch.prototype.setTolerateDebugOpCreationFailures = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebugOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.DebugOptions.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.DebugOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebugOptions.displayName = 'proto.tensorflow.DebugOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.DebugOptions.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebugOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebugOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebugOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    debugTensorWatchOptsList: jspb.Message.toObjectList(msg.getDebugTensorWatchOptsList(),
    proto.tensorflow.DebugTensorWatch.toObject, includeInstance),
    globalStep: jspb.Message.getFieldWithDefault(msg, 10, 0),
    resetDiskByteUsage: jspb.Message.getFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebugOptions}
 */
proto.tensorflow.DebugOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebugOptions;
  return proto.tensorflow.DebugOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebugOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebugOptions}
 */
proto.tensorflow.DebugOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.tensorflow.DebugTensorWatch;
      reader.readMessage(value,proto.tensorflow.DebugTensorWatch.deserializeBinaryFromReader);
      msg.addDebugTensorWatchOpts(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGlobalStep(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResetDiskByteUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebugOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebugOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebugOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebugOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDebugTensorWatchOptsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tensorflow.DebugTensorWatch.serializeBinaryToWriter
    );
  }
  f = message.getGlobalStep();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getResetDiskByteUsage();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * repeated DebugTensorWatch debug_tensor_watch_opts = 4;
 * @return {!Array.<!proto.tensorflow.DebugTensorWatch>}
 */
proto.tensorflow.DebugOptions.prototype.getDebugTensorWatchOptsList = function() {
  return /** @type{!Array.<!proto.tensorflow.DebugTensorWatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.DebugTensorWatch, 4));
};


/** @param {!Array.<!proto.tensorflow.DebugTensorWatch>} value */
proto.tensorflow.DebugOptions.prototype.setDebugTensorWatchOptsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tensorflow.DebugTensorWatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.DebugTensorWatch}
 */
proto.tensorflow.DebugOptions.prototype.addDebugTensorWatchOpts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tensorflow.DebugTensorWatch, opt_index);
};


proto.tensorflow.DebugOptions.prototype.clearDebugTensorWatchOptsList = function() {
  this.setDebugTensorWatchOptsList([]);
};


/**
 * optional int64 global_step = 10;
 * @return {number}
 */
proto.tensorflow.DebugOptions.prototype.getGlobalStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.tensorflow.DebugOptions.prototype.setGlobalStep = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool reset_disk_byte_usage = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.DebugOptions.prototype.getResetDiskByteUsage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.tensorflow.DebugOptions.prototype.setResetDiskByteUsage = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebuggedSourceFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.DebuggedSourceFile.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.DebuggedSourceFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebuggedSourceFile.displayName = 'proto.tensorflow.DebuggedSourceFile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.DebuggedSourceFile.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebuggedSourceFile.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebuggedSourceFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebuggedSourceFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedSourceFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filePath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastModified: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    linesList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebuggedSourceFile}
 */
proto.tensorflow.DebuggedSourceFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebuggedSourceFile;
  return proto.tensorflow.DebuggedSourceFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebuggedSourceFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebuggedSourceFile}
 */
proto.tensorflow.DebuggedSourceFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastModified(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBytes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addLines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebuggedSourceFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebuggedSourceFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebuggedSourceFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedSourceFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastModified();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBytes();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.tensorflow.DebuggedSourceFile.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.DebuggedSourceFile.prototype.setHost = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_path = 2;
 * @return {string}
 */
proto.tensorflow.DebuggedSourceFile.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.DebuggedSourceFile.prototype.setFilePath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 last_modified = 3;
 * @return {number}
 */
proto.tensorflow.DebuggedSourceFile.prototype.getLastModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.DebuggedSourceFile.prototype.setLastModified = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 bytes = 4;
 * @return {number}
 */
proto.tensorflow.DebuggedSourceFile.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.DebuggedSourceFile.prototype.setBytes = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated string lines = 5;
 * @return {!Array.<string>}
 */
proto.tensorflow.DebuggedSourceFile.prototype.getLinesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<string>} value */
proto.tensorflow.DebuggedSourceFile.prototype.setLinesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.DebuggedSourceFile.prototype.addLines = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.tensorflow.DebuggedSourceFile.prototype.clearLinesList = function() {
  this.setLinesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.DebuggedSourceFiles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.DebuggedSourceFiles.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.DebuggedSourceFiles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.DebuggedSourceFiles.displayName = 'proto.tensorflow.DebuggedSourceFiles';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.DebuggedSourceFiles.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.DebuggedSourceFiles.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.DebuggedSourceFiles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.DebuggedSourceFiles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedSourceFiles.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceFilesList: jspb.Message.toObjectList(msg.getSourceFilesList(),
    proto.tensorflow.DebuggedSourceFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.DebuggedSourceFiles}
 */
proto.tensorflow.DebuggedSourceFiles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.DebuggedSourceFiles;
  return proto.tensorflow.DebuggedSourceFiles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.DebuggedSourceFiles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.DebuggedSourceFiles}
 */
proto.tensorflow.DebuggedSourceFiles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.DebuggedSourceFile;
      reader.readMessage(value,proto.tensorflow.DebuggedSourceFile.deserializeBinaryFromReader);
      msg.addSourceFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.DebuggedSourceFiles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.DebuggedSourceFiles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.DebuggedSourceFiles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.DebuggedSourceFiles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.DebuggedSourceFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DebuggedSourceFile source_files = 1;
 * @return {!Array.<!proto.tensorflow.DebuggedSourceFile>}
 */
proto.tensorflow.DebuggedSourceFiles.prototype.getSourceFilesList = function() {
  return /** @type{!Array.<!proto.tensorflow.DebuggedSourceFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.DebuggedSourceFile, 1));
};


/** @param {!Array.<!proto.tensorflow.DebuggedSourceFile>} value */
proto.tensorflow.DebuggedSourceFiles.prototype.setSourceFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.DebuggedSourceFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.DebuggedSourceFile}
 */
proto.tensorflow.DebuggedSourceFiles.prototype.addSourceFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.DebuggedSourceFile, opt_index);
};


proto.tensorflow.DebuggedSourceFiles.prototype.clearSourceFilesList = function() {
  this.setSourceFilesList([]);
};


goog.object.extend(exports, proto.tensorflow);
