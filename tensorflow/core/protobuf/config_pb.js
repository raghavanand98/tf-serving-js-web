/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_cost_graph_pb = require('../../../tensorflow/core/framework/cost_graph_pb.js');
var tensorflow_core_framework_graph_pb = require('../../../tensorflow/core/framework/graph_pb.js');
var tensorflow_core_framework_step_stats_pb = require('../../../tensorflow/core/framework/step_stats_pb.js');
var tensorflow_core_protobuf_debug_pb = require('../../../tensorflow/core/protobuf/debug_pb.js');
var tensorflow_core_protobuf_cluster_pb = require('../../../tensorflow/core/protobuf/cluster_pb.js');
var tensorflow_core_protobuf_rewriter_config_pb = require('../../../tensorflow/core/protobuf/rewriter_config_pb.js');
goog.exportSymbol('proto.tensorflow.CallableOptions', null, global);
goog.exportSymbol('proto.tensorflow.ConfigProto', null, global);
goog.exportSymbol('proto.tensorflow.ConfigProto.Experimental', null, global);
goog.exportSymbol('proto.tensorflow.GPUOptions', null, global);
goog.exportSymbol('proto.tensorflow.GPUOptions.Experimental', null, global);
goog.exportSymbol('proto.tensorflow.GPUOptions.Experimental.VirtualDevices', null, global);
goog.exportSymbol('proto.tensorflow.GraphOptions', null, global);
goog.exportSymbol('proto.tensorflow.OptimizerOptions', null, global);
goog.exportSymbol('proto.tensorflow.OptimizerOptions.GlobalJitLevel', null, global);
goog.exportSymbol('proto.tensorflow.OptimizerOptions.Level', null, global);
goog.exportSymbol('proto.tensorflow.RPCOptions', null, global);
goog.exportSymbol('proto.tensorflow.RunMetadata', null, global);
goog.exportSymbol('proto.tensorflow.RunOptions', null, global);
goog.exportSymbol('proto.tensorflow.RunOptions.Experimental', null, global);
goog.exportSymbol('proto.tensorflow.RunOptions.TraceLevel', null, global);
goog.exportSymbol('proto.tensorflow.TensorConnection', null, global);
goog.exportSymbol('proto.tensorflow.ThreadPoolOptionProto', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GPUOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.GPUOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GPUOptions.displayName = 'proto.tensorflow.GPUOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GPUOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GPUOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GPUOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    perProcessGpuMemoryFraction: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    allowGrowth: jspb.Message.getFieldWithDefault(msg, 4, false),
    allocatorType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deferredDeletionBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    visibleDeviceList: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pollingActiveDelayUsecs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pollingInactiveDelayMsecs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    forceGpuCompatible: jspb.Message.getFieldWithDefault(msg, 8, false),
    experimental: (f = msg.getExperimental()) && proto.tensorflow.GPUOptions.Experimental.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GPUOptions}
 */
proto.tensorflow.GPUOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GPUOptions;
  return proto.tensorflow.GPUOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GPUOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GPUOptions}
 */
proto.tensorflow.GPUOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPerProcessGpuMemoryFraction(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowGrowth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllocatorType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeferredDeletionBytes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVisibleDeviceList(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPollingActiveDelayUsecs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPollingInactiveDelayMsecs(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceGpuCompatible(value);
      break;
    case 9:
      var value = new proto.tensorflow.GPUOptions.Experimental;
      reader.readMessage(value,proto.tensorflow.GPUOptions.Experimental.deserializeBinaryFromReader);
      msg.setExperimental(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GPUOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GPUOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GPUOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerProcessGpuMemoryFraction();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getAllowGrowth();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAllocatorType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeferredDeletionBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVisibleDeviceList();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPollingActiveDelayUsecs();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPollingInactiveDelayMsecs();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getForceGpuCompatible();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getExperimental();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.tensorflow.GPUOptions.Experimental.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GPUOptions.Experimental = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.GPUOptions.Experimental.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.GPUOptions.Experimental, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GPUOptions.Experimental.displayName = 'proto.tensorflow.GPUOptions.Experimental';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.GPUOptions.Experimental.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GPUOptions.Experimental.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GPUOptions.Experimental} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.Experimental.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualDevicesList: jspb.Message.toObjectList(msg.getVirtualDevicesList(),
    proto.tensorflow.GPUOptions.Experimental.VirtualDevices.toObject, includeInstance),
    useUnifiedMemory: jspb.Message.getFieldWithDefault(msg, 2, false),
    numDevToDevCopyStreams: jspb.Message.getFieldWithDefault(msg, 3, 0),
    collectiveRingOrder: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GPUOptions.Experimental}
 */
proto.tensorflow.GPUOptions.Experimental.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GPUOptions.Experimental;
  return proto.tensorflow.GPUOptions.Experimental.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GPUOptions.Experimental} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GPUOptions.Experimental}
 */
proto.tensorflow.GPUOptions.Experimental.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.GPUOptions.Experimental.VirtualDevices;
      reader.readMessage(value,proto.tensorflow.GPUOptions.Experimental.VirtualDevices.deserializeBinaryFromReader);
      msg.addVirtualDevices(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseUnifiedMemory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumDevToDevCopyStreams(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectiveRingOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GPUOptions.Experimental.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GPUOptions.Experimental} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.Experimental.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.GPUOptions.Experimental.VirtualDevices.serializeBinaryToWriter
    );
  }
  f = message.getUseUnifiedMemory();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNumDevToDevCopyStreams();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCollectiveRingOrder();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.GPUOptions.Experimental.VirtualDevices.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.GPUOptions.Experimental.VirtualDevices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GPUOptions.Experimental.VirtualDevices.displayName = 'proto.tensorflow.GPUOptions.Experimental.VirtualDevices';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GPUOptions.Experimental.VirtualDevices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.toObject = function(includeInstance, msg) {
  var f, obj = {
    memoryLimitMbList: jspb.Message.getRepeatedFloatingPointField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices}
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GPUOptions.Experimental.VirtualDevices;
  return proto.tensorflow.GPUOptions.Experimental.VirtualDevices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices}
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
      msg.setMemoryLimitMbList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GPUOptions.Experimental.VirtualDevices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemoryLimitMbList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float memory_limit_mb = 1;
 * @return {!Array.<number>}
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.getMemoryLimitMbList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/** @param {!Array.<number>} value */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.setMemoryLimitMbList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.addMemoryLimitMb = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.tensorflow.GPUOptions.Experimental.VirtualDevices.prototype.clearMemoryLimitMbList = function() {
  this.setMemoryLimitMbList([]);
};


/**
 * repeated VirtualDevices virtual_devices = 1;
 * @return {!Array.<!proto.tensorflow.GPUOptions.Experimental.VirtualDevices>}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.getVirtualDevicesList = function() {
  return /** @type{!Array.<!proto.tensorflow.GPUOptions.Experimental.VirtualDevices>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.GPUOptions.Experimental.VirtualDevices, 1));
};


/** @param {!Array.<!proto.tensorflow.GPUOptions.Experimental.VirtualDevices>} value */
proto.tensorflow.GPUOptions.Experimental.prototype.setVirtualDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.GPUOptions.Experimental.VirtualDevices}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.addVirtualDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.GPUOptions.Experimental.VirtualDevices, opt_index);
};


proto.tensorflow.GPUOptions.Experimental.prototype.clearVirtualDevicesList = function() {
  this.setVirtualDevicesList([]);
};


/**
 * optional bool use_unified_memory = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.getUseUnifiedMemory = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.GPUOptions.Experimental.prototype.setUseUnifiedMemory = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 num_dev_to_dev_copy_streams = 3;
 * @return {number}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.getNumDevToDevCopyStreams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.GPUOptions.Experimental.prototype.setNumDevToDevCopyStreams = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string collective_ring_order = 4;
 * @return {string}
 */
proto.tensorflow.GPUOptions.Experimental.prototype.getCollectiveRingOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.GPUOptions.Experimental.prototype.setCollectiveRingOrder = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double per_process_gpu_memory_fraction = 1;
 * @return {number}
 */
proto.tensorflow.GPUOptions.prototype.getPerProcessGpuMemoryFraction = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.tensorflow.GPUOptions.prototype.setPerProcessGpuMemoryFraction = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional bool allow_growth = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GPUOptions.prototype.getAllowGrowth = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.tensorflow.GPUOptions.prototype.setAllowGrowth = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string allocator_type = 2;
 * @return {string}
 */
proto.tensorflow.GPUOptions.prototype.getAllocatorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.GPUOptions.prototype.setAllocatorType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 deferred_deletion_bytes = 3;
 * @return {number}
 */
proto.tensorflow.GPUOptions.prototype.getDeferredDeletionBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.GPUOptions.prototype.setDeferredDeletionBytes = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string visible_device_list = 5;
 * @return {string}
 */
proto.tensorflow.GPUOptions.prototype.getVisibleDeviceList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.GPUOptions.prototype.setVisibleDeviceList = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 polling_active_delay_usecs = 6;
 * @return {number}
 */
proto.tensorflow.GPUOptions.prototype.getPollingActiveDelayUsecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tensorflow.GPUOptions.prototype.setPollingActiveDelayUsecs = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 polling_inactive_delay_msecs = 7;
 * @return {number}
 */
proto.tensorflow.GPUOptions.prototype.getPollingInactiveDelayMsecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.tensorflow.GPUOptions.prototype.setPollingInactiveDelayMsecs = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool force_gpu_compatible = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GPUOptions.prototype.getForceGpuCompatible = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.tensorflow.GPUOptions.prototype.setForceGpuCompatible = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional Experimental experimental = 9;
 * @return {?proto.tensorflow.GPUOptions.Experimental}
 */
proto.tensorflow.GPUOptions.prototype.getExperimental = function() {
  return /** @type{?proto.tensorflow.GPUOptions.Experimental} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.GPUOptions.Experimental, 9));
};


/** @param {?proto.tensorflow.GPUOptions.Experimental|undefined} value */
proto.tensorflow.GPUOptions.prototype.setExperimental = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tensorflow.GPUOptions.prototype.clearExperimental = function() {
  this.setExperimental(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.GPUOptions.prototype.hasExperimental = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.OptimizerOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.OptimizerOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.OptimizerOptions.displayName = 'proto.tensorflow.OptimizerOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.OptimizerOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.OptimizerOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.OptimizerOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.OptimizerOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    doCommonSubexpressionElimination: jspb.Message.getFieldWithDefault(msg, 1, false),
    doConstantFolding: jspb.Message.getFieldWithDefault(msg, 2, false),
    maxFoldedConstantInBytes: jspb.Message.getFieldWithDefault(msg, 6, 0),
    doFunctionInlining: jspb.Message.getFieldWithDefault(msg, 4, false),
    optLevel: jspb.Message.getFieldWithDefault(msg, 3, 0),
    globalJitLevel: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.OptimizerOptions}
 */
proto.tensorflow.OptimizerOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.OptimizerOptions;
  return proto.tensorflow.OptimizerOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.OptimizerOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.OptimizerOptions}
 */
proto.tensorflow.OptimizerOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoCommonSubexpressionElimination(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoConstantFolding(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxFoldedConstantInBytes(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoFunctionInlining(value);
      break;
    case 3:
      var value = /** @type {!proto.tensorflow.OptimizerOptions.Level} */ (reader.readEnum());
      msg.setOptLevel(value);
      break;
    case 5:
      var value = /** @type {!proto.tensorflow.OptimizerOptions.GlobalJitLevel} */ (reader.readEnum());
      msg.setGlobalJitLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.OptimizerOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.OptimizerOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.OptimizerOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.OptimizerOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDoCommonSubexpressionElimination();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDoConstantFolding();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMaxFoldedConstantInBytes();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDoFunctionInlining();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOptLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getGlobalJitLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.OptimizerOptions.Level = {
  L1: 0,
  L0: -1
};

/**
 * @enum {number}
 */
proto.tensorflow.OptimizerOptions.GlobalJitLevel = {
  DEFAULT: 0,
  OFF: -1,
  ON_1: 1,
  ON_2: 2
};

/**
 * optional bool do_common_subexpression_elimination = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OptimizerOptions.prototype.getDoCommonSubexpressionElimination = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.tensorflow.OptimizerOptions.prototype.setDoCommonSubexpressionElimination = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool do_constant_folding = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OptimizerOptions.prototype.getDoConstantFolding = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.OptimizerOptions.prototype.setDoConstantFolding = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 max_folded_constant_in_bytes = 6;
 * @return {number}
 */
proto.tensorflow.OptimizerOptions.prototype.getMaxFoldedConstantInBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tensorflow.OptimizerOptions.prototype.setMaxFoldedConstantInBytes = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool do_function_inlining = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OptimizerOptions.prototype.getDoFunctionInlining = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.tensorflow.OptimizerOptions.prototype.setDoFunctionInlining = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Level opt_level = 3;
 * @return {!proto.tensorflow.OptimizerOptions.Level}
 */
proto.tensorflow.OptimizerOptions.prototype.getOptLevel = function() {
  return /** @type {!proto.tensorflow.OptimizerOptions.Level} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tensorflow.OptimizerOptions.Level} value */
proto.tensorflow.OptimizerOptions.prototype.setOptLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional GlobalJitLevel global_jit_level = 5;
 * @return {!proto.tensorflow.OptimizerOptions.GlobalJitLevel}
 */
proto.tensorflow.OptimizerOptions.prototype.getGlobalJitLevel = function() {
  return /** @type {!proto.tensorflow.OptimizerOptions.GlobalJitLevel} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.tensorflow.OptimizerOptions.GlobalJitLevel} value */
proto.tensorflow.OptimizerOptions.prototype.setGlobalJitLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.GraphOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.GraphOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.GraphOptions.displayName = 'proto.tensorflow.GraphOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.GraphOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.GraphOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.GraphOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableRecvScheduling: jspb.Message.getFieldWithDefault(msg, 2, false),
    optimizerOptions: (f = msg.getOptimizerOptions()) && proto.tensorflow.OptimizerOptions.toObject(includeInstance, f),
    buildCostModel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    buildCostModelAfter: jspb.Message.getFieldWithDefault(msg, 9, 0),
    inferShapes: jspb.Message.getFieldWithDefault(msg, 5, false),
    placePrunedGraph: jspb.Message.getFieldWithDefault(msg, 6, false),
    enableBfloat16Sendrecv: jspb.Message.getFieldWithDefault(msg, 7, false),
    timelineStep: jspb.Message.getFieldWithDefault(msg, 8, 0),
    rewriteOptions: (f = msg.getRewriteOptions()) && tensorflow_core_protobuf_rewriter_config_pb.RewriterConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.GraphOptions}
 */
proto.tensorflow.GraphOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.GraphOptions;
  return proto.tensorflow.GraphOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.GraphOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.GraphOptions}
 */
proto.tensorflow.GraphOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableRecvScheduling(value);
      break;
    case 3:
      var value = new proto.tensorflow.OptimizerOptions;
      reader.readMessage(value,proto.tensorflow.OptimizerOptions.deserializeBinaryFromReader);
      msg.setOptimizerOptions(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuildCostModel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuildCostModelAfter(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInferShapes(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPlacePrunedGraph(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableBfloat16Sendrecv(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimelineStep(value);
      break;
    case 10:
      var value = new tensorflow_core_protobuf_rewriter_config_pb.RewriterConfig;
      reader.readMessage(value,tensorflow_core_protobuf_rewriter_config_pb.RewriterConfig.deserializeBinaryFromReader);
      msg.setRewriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.GraphOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.GraphOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.GraphOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.GraphOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableRecvScheduling();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOptimizerOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.OptimizerOptions.serializeBinaryToWriter
    );
  }
  f = message.getBuildCostModel();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBuildCostModelAfter();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getInferShapes();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPlacePrunedGraph();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getEnableBfloat16Sendrecv();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTimelineStep();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRewriteOptions();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      tensorflow_core_protobuf_rewriter_config_pb.RewriterConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enable_recv_scheduling = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GraphOptions.prototype.getEnableRecvScheduling = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.GraphOptions.prototype.setEnableRecvScheduling = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional OptimizerOptions optimizer_options = 3;
 * @return {?proto.tensorflow.OptimizerOptions}
 */
proto.tensorflow.GraphOptions.prototype.getOptimizerOptions = function() {
  return /** @type{?proto.tensorflow.OptimizerOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.OptimizerOptions, 3));
};


/** @param {?proto.tensorflow.OptimizerOptions|undefined} value */
proto.tensorflow.GraphOptions.prototype.setOptimizerOptions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.GraphOptions.prototype.clearOptimizerOptions = function() {
  this.setOptimizerOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.GraphOptions.prototype.hasOptimizerOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 build_cost_model = 4;
 * @return {number}
 */
proto.tensorflow.GraphOptions.prototype.getBuildCostModel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.GraphOptions.prototype.setBuildCostModel = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 build_cost_model_after = 9;
 * @return {number}
 */
proto.tensorflow.GraphOptions.prototype.getBuildCostModelAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.tensorflow.GraphOptions.prototype.setBuildCostModelAfter = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool infer_shapes = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GraphOptions.prototype.getInferShapes = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.tensorflow.GraphOptions.prototype.setInferShapes = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool place_pruned_graph = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GraphOptions.prototype.getPlacePrunedGraph = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.tensorflow.GraphOptions.prototype.setPlacePrunedGraph = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool enable_bfloat16_sendrecv = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.GraphOptions.prototype.getEnableBfloat16Sendrecv = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.tensorflow.GraphOptions.prototype.setEnableBfloat16Sendrecv = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 timeline_step = 8;
 * @return {number}
 */
proto.tensorflow.GraphOptions.prototype.getTimelineStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.tensorflow.GraphOptions.prototype.setTimelineStep = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional RewriterConfig rewrite_options = 10;
 * @return {?proto.tensorflow.RewriterConfig}
 */
proto.tensorflow.GraphOptions.prototype.getRewriteOptions = function() {
  return /** @type{?proto.tensorflow.RewriterConfig} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_protobuf_rewriter_config_pb.RewriterConfig, 10));
};


/** @param {?proto.tensorflow.RewriterConfig|undefined} value */
proto.tensorflow.GraphOptions.prototype.setRewriteOptions = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.tensorflow.GraphOptions.prototype.clearRewriteOptions = function() {
  this.setRewriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.GraphOptions.prototype.hasRewriteOptions = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ThreadPoolOptionProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.ThreadPoolOptionProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ThreadPoolOptionProto.displayName = 'proto.tensorflow.ThreadPoolOptionProto';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ThreadPoolOptionProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ThreadPoolOptionProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ThreadPoolOptionProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ThreadPoolOptionProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    numThreads: jspb.Message.getFieldWithDefault(msg, 1, 0),
    globalName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ThreadPoolOptionProto}
 */
proto.tensorflow.ThreadPoolOptionProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ThreadPoolOptionProto;
  return proto.tensorflow.ThreadPoolOptionProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ThreadPoolOptionProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ThreadPoolOptionProto}
 */
proto.tensorflow.ThreadPoolOptionProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumThreads(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGlobalName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ThreadPoolOptionProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ThreadPoolOptionProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ThreadPoolOptionProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ThreadPoolOptionProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumThreads();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGlobalName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 num_threads = 1;
 * @return {number}
 */
proto.tensorflow.ThreadPoolOptionProto.prototype.getNumThreads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.ThreadPoolOptionProto.prototype.setNumThreads = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string global_name = 2;
 * @return {string}
 */
proto.tensorflow.ThreadPoolOptionProto.prototype.getGlobalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.ThreadPoolOptionProto.prototype.setGlobalName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RPCOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.RPCOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RPCOptions.displayName = 'proto.tensorflow.RPCOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RPCOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RPCOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RPCOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RPCOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    useRpcForInprocessMaster: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RPCOptions}
 */
proto.tensorflow.RPCOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RPCOptions;
  return proto.tensorflow.RPCOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RPCOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RPCOptions}
 */
proto.tensorflow.RPCOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseRpcForInprocessMaster(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RPCOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RPCOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RPCOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RPCOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUseRpcForInprocessMaster();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool use_rpc_for_inprocess_master = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RPCOptions.prototype.getUseRpcForInprocessMaster = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.tensorflow.RPCOptions.prototype.setUseRpcForInprocessMaster = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ConfigProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.ConfigProto.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.ConfigProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ConfigProto.displayName = 'proto.tensorflow.ConfigProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.ConfigProto.repeatedFields_ = [12,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ConfigProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ConfigProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ConfigProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ConfigProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceCountMap: (f = msg.getDeviceCountMap()) ? f.toObject(includeInstance, undefined) : [],
    intraOpParallelismThreads: jspb.Message.getFieldWithDefault(msg, 2, 0),
    interOpParallelismThreads: jspb.Message.getFieldWithDefault(msg, 5, 0),
    usePerSessionThreads: jspb.Message.getFieldWithDefault(msg, 9, false),
    sessionInterOpThreadPoolList: jspb.Message.toObjectList(msg.getSessionInterOpThreadPoolList(),
    proto.tensorflow.ThreadPoolOptionProto.toObject, includeInstance),
    placementPeriod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deviceFiltersList: jspb.Message.getRepeatedField(msg, 4),
    gpuOptions: (f = msg.getGpuOptions()) && proto.tensorflow.GPUOptions.toObject(includeInstance, f),
    allowSoftPlacement: jspb.Message.getFieldWithDefault(msg, 7, false),
    logDevicePlacement: jspb.Message.getFieldWithDefault(msg, 8, false),
    graphOptions: (f = msg.getGraphOptions()) && proto.tensorflow.GraphOptions.toObject(includeInstance, f),
    operationTimeoutInMs: jspb.Message.getFieldWithDefault(msg, 11, 0),
    rpcOptions: (f = msg.getRpcOptions()) && proto.tensorflow.RPCOptions.toObject(includeInstance, f),
    clusterDef: (f = msg.getClusterDef()) && tensorflow_core_protobuf_cluster_pb.ClusterDef.toObject(includeInstance, f),
    isolateSessionState: jspb.Message.getFieldWithDefault(msg, 15, false),
    experimental: (f = msg.getExperimental()) && proto.tensorflow.ConfigProto.Experimental.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ConfigProto}
 */
proto.tensorflow.ConfigProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ConfigProto;
  return proto.tensorflow.ConfigProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ConfigProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ConfigProto}
 */
proto.tensorflow.ConfigProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDeviceCountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32);
         });
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntraOpParallelismThreads(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInterOpParallelismThreads(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePerSessionThreads(value);
      break;
    case 12:
      var value = new proto.tensorflow.ThreadPoolOptionProto;
      reader.readMessage(value,proto.tensorflow.ThreadPoolOptionProto.deserializeBinaryFromReader);
      msg.addSessionInterOpThreadPool(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlacementPeriod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeviceFilters(value);
      break;
    case 6:
      var value = new proto.tensorflow.GPUOptions;
      reader.readMessage(value,proto.tensorflow.GPUOptions.deserializeBinaryFromReader);
      msg.setGpuOptions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSoftPlacement(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLogDevicePlacement(value);
      break;
    case 10:
      var value = new proto.tensorflow.GraphOptions;
      reader.readMessage(value,proto.tensorflow.GraphOptions.deserializeBinaryFromReader);
      msg.setGraphOptions(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOperationTimeoutInMs(value);
      break;
    case 13:
      var value = new proto.tensorflow.RPCOptions;
      reader.readMessage(value,proto.tensorflow.RPCOptions.deserializeBinaryFromReader);
      msg.setRpcOptions(value);
      break;
    case 14:
      var value = new tensorflow_core_protobuf_cluster_pb.ClusterDef;
      reader.readMessage(value,tensorflow_core_protobuf_cluster_pb.ClusterDef.deserializeBinaryFromReader);
      msg.setClusterDef(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsolateSessionState(value);
      break;
    case 16:
      var value = new proto.tensorflow.ConfigProto.Experimental;
      reader.readMessage(value,proto.tensorflow.ConfigProto.Experimental.deserializeBinaryFromReader);
      msg.setExperimental(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ConfigProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ConfigProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ConfigProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ConfigProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceCountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getIntraOpParallelismThreads();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getInterOpParallelismThreads();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUsePerSessionThreads();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSessionInterOpThreadPoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.tensorflow.ThreadPoolOptionProto.serializeBinaryToWriter
    );
  }
  f = message.getPlacementPeriod();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDeviceFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getGpuOptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.GPUOptions.serializeBinaryToWriter
    );
  }
  f = message.getAllowSoftPlacement();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLogDevicePlacement();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getGraphOptions();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.tensorflow.GraphOptions.serializeBinaryToWriter
    );
  }
  f = message.getOperationTimeoutInMs();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getRpcOptions();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.tensorflow.RPCOptions.serializeBinaryToWriter
    );
  }
  f = message.getClusterDef();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      tensorflow_core_protobuf_cluster_pb.ClusterDef.serializeBinaryToWriter
    );
  }
  f = message.getIsolateSessionState();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getExperimental();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.tensorflow.ConfigProto.Experimental.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ConfigProto.Experimental = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.ConfigProto.Experimental, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ConfigProto.Experimental.displayName = 'proto.tensorflow.ConfigProto.Experimental';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ConfigProto.Experimental.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ConfigProto.Experimental} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ConfigProto.Experimental.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectiveGroupLeader: jspb.Message.getFieldWithDefault(msg, 1, ""),
    executorType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recvBufMaxChunk: jspb.Message.getFieldWithDefault(msg, 4, 0),
    useNumaAffinity: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ConfigProto.Experimental}
 */
proto.tensorflow.ConfigProto.Experimental.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ConfigProto.Experimental;
  return proto.tensorflow.ConfigProto.Experimental.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ConfigProto.Experimental} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ConfigProto.Experimental}
 */
proto.tensorflow.ConfigProto.Experimental.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectiveGroupLeader(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutorType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecvBufMaxChunk(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseNumaAffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ConfigProto.Experimental.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ConfigProto.Experimental} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ConfigProto.Experimental.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectiveGroupLeader();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExecutorType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecvBufMaxChunk();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUseNumaAffinity();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string collective_group_leader = 1;
 * @return {string}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.getCollectiveGroupLeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.ConfigProto.Experimental.prototype.setCollectiveGroupLeader = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string executor_type = 3;
 * @return {string}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.getExecutorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.tensorflow.ConfigProto.Experimental.prototype.setExecutorType = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 recv_buf_max_chunk = 4;
 * @return {number}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.getRecvBufMaxChunk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.ConfigProto.Experimental.prototype.setRecvBufMaxChunk = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool use_numa_affinity = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.ConfigProto.Experimental.prototype.getUseNumaAffinity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.tensorflow.ConfigProto.Experimental.prototype.setUseNumaAffinity = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * map<string, int32> device_count = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.tensorflow.ConfigProto.prototype.getDeviceCountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.tensorflow.ConfigProto.prototype.clearDeviceCountMap = function() {
  this.getDeviceCountMap().clear();
};


/**
 * optional int32 intra_op_parallelism_threads = 2;
 * @return {number}
 */
proto.tensorflow.ConfigProto.prototype.getIntraOpParallelismThreads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.ConfigProto.prototype.setIntraOpParallelismThreads = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 inter_op_parallelism_threads = 5;
 * @return {number}
 */
proto.tensorflow.ConfigProto.prototype.getInterOpParallelismThreads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tensorflow.ConfigProto.prototype.setInterOpParallelismThreads = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool use_per_session_threads = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.ConfigProto.prototype.getUsePerSessionThreads = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.tensorflow.ConfigProto.prototype.setUsePerSessionThreads = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated ThreadPoolOptionProto session_inter_op_thread_pool = 12;
 * @return {!Array.<!proto.tensorflow.ThreadPoolOptionProto>}
 */
proto.tensorflow.ConfigProto.prototype.getSessionInterOpThreadPoolList = function() {
  return /** @type{!Array.<!proto.tensorflow.ThreadPoolOptionProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.ThreadPoolOptionProto, 12));
};


/** @param {!Array.<!proto.tensorflow.ThreadPoolOptionProto>} value */
proto.tensorflow.ConfigProto.prototype.setSessionInterOpThreadPoolList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.tensorflow.ThreadPoolOptionProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.ThreadPoolOptionProto}
 */
proto.tensorflow.ConfigProto.prototype.addSessionInterOpThreadPool = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.tensorflow.ThreadPoolOptionProto, opt_index);
};


proto.tensorflow.ConfigProto.prototype.clearSessionInterOpThreadPoolList = function() {
  this.setSessionInterOpThreadPoolList([]);
};


/**
 * optional int32 placement_period = 3;
 * @return {number}
 */
proto.tensorflow.ConfigProto.prototype.getPlacementPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.ConfigProto.prototype.setPlacementPeriod = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string device_filters = 4;
 * @return {!Array.<string>}
 */
proto.tensorflow.ConfigProto.prototype.getDeviceFiltersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.tensorflow.ConfigProto.prototype.setDeviceFiltersList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.ConfigProto.prototype.addDeviceFilters = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tensorflow.ConfigProto.prototype.clearDeviceFiltersList = function() {
  this.setDeviceFiltersList([]);
};


/**
 * optional GPUOptions gpu_options = 6;
 * @return {?proto.tensorflow.GPUOptions}
 */
proto.tensorflow.ConfigProto.prototype.getGpuOptions = function() {
  return /** @type{?proto.tensorflow.GPUOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.GPUOptions, 6));
};


/** @param {?proto.tensorflow.GPUOptions|undefined} value */
proto.tensorflow.ConfigProto.prototype.setGpuOptions = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.tensorflow.ConfigProto.prototype.clearGpuOptions = function() {
  this.setGpuOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ConfigProto.prototype.hasGpuOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool allow_soft_placement = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.ConfigProto.prototype.getAllowSoftPlacement = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.tensorflow.ConfigProto.prototype.setAllowSoftPlacement = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool log_device_placement = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.ConfigProto.prototype.getLogDevicePlacement = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.tensorflow.ConfigProto.prototype.setLogDevicePlacement = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional GraphOptions graph_options = 10;
 * @return {?proto.tensorflow.GraphOptions}
 */
proto.tensorflow.ConfigProto.prototype.getGraphOptions = function() {
  return /** @type{?proto.tensorflow.GraphOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.GraphOptions, 10));
};


/** @param {?proto.tensorflow.GraphOptions|undefined} value */
proto.tensorflow.ConfigProto.prototype.setGraphOptions = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.tensorflow.ConfigProto.prototype.clearGraphOptions = function() {
  this.setGraphOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ConfigProto.prototype.hasGraphOptions = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 operation_timeout_in_ms = 11;
 * @return {number}
 */
proto.tensorflow.ConfigProto.prototype.getOperationTimeoutInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.tensorflow.ConfigProto.prototype.setOperationTimeoutInMs = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional RPCOptions rpc_options = 13;
 * @return {?proto.tensorflow.RPCOptions}
 */
proto.tensorflow.ConfigProto.prototype.getRpcOptions = function() {
  return /** @type{?proto.tensorflow.RPCOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.RPCOptions, 13));
};


/** @param {?proto.tensorflow.RPCOptions|undefined} value */
proto.tensorflow.ConfigProto.prototype.setRpcOptions = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.tensorflow.ConfigProto.prototype.clearRpcOptions = function() {
  this.setRpcOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ConfigProto.prototype.hasRpcOptions = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ClusterDef cluster_def = 14;
 * @return {?proto.tensorflow.ClusterDef}
 */
proto.tensorflow.ConfigProto.prototype.getClusterDef = function() {
  return /** @type{?proto.tensorflow.ClusterDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_protobuf_cluster_pb.ClusterDef, 14));
};


/** @param {?proto.tensorflow.ClusterDef|undefined} value */
proto.tensorflow.ConfigProto.prototype.setClusterDef = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.tensorflow.ConfigProto.prototype.clearClusterDef = function() {
  this.setClusterDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ConfigProto.prototype.hasClusterDef = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool isolate_session_state = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.ConfigProto.prototype.getIsolateSessionState = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.tensorflow.ConfigProto.prototype.setIsolateSessionState = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional Experimental experimental = 16;
 * @return {?proto.tensorflow.ConfigProto.Experimental}
 */
proto.tensorflow.ConfigProto.prototype.getExperimental = function() {
  return /** @type{?proto.tensorflow.ConfigProto.Experimental} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ConfigProto.Experimental, 16));
};


/** @param {?proto.tensorflow.ConfigProto.Experimental|undefined} value */
proto.tensorflow.ConfigProto.prototype.setExperimental = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.tensorflow.ConfigProto.prototype.clearExperimental = function() {
  this.setExperimental(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.ConfigProto.prototype.hasExperimental = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RunOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.RunOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RunOptions.displayName = 'proto.tensorflow.RunOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RunOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RunOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RunOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    traceLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeoutInMs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    interOpThreadPool: jspb.Message.getFieldWithDefault(msg, 3, 0),
    outputPartitionGraphs: jspb.Message.getFieldWithDefault(msg, 5, false),
    debugOptions: (f = msg.getDebugOptions()) && tensorflow_core_protobuf_debug_pb.DebugOptions.toObject(includeInstance, f),
    reportTensorAllocationsUponOom: jspb.Message.getFieldWithDefault(msg, 7, false),
    experimental: (f = msg.getExperimental()) && proto.tensorflow.RunOptions.Experimental.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RunOptions}
 */
proto.tensorflow.RunOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RunOptions;
  return proto.tensorflow.RunOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RunOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RunOptions}
 */
proto.tensorflow.RunOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tensorflow.RunOptions.TraceLevel} */ (reader.readEnum());
      msg.setTraceLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeoutInMs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInterOpThreadPool(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutputPartitionGraphs(value);
      break;
    case 6:
      var value = new tensorflow_core_protobuf_debug_pb.DebugOptions;
      reader.readMessage(value,tensorflow_core_protobuf_debug_pb.DebugOptions.deserializeBinaryFromReader);
      msg.setDebugOptions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReportTensorAllocationsUponOom(value);
      break;
    case 8:
      var value = new proto.tensorflow.RunOptions.Experimental;
      reader.readMessage(value,proto.tensorflow.RunOptions.Experimental.deserializeBinaryFromReader);
      msg.setExperimental(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RunOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RunOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RunOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimeoutInMs();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInterOpThreadPool();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOutputPartitionGraphs();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDebugOptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      tensorflow_core_protobuf_debug_pb.DebugOptions.serializeBinaryToWriter
    );
  }
  f = message.getReportTensorAllocationsUponOom();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getExperimental();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.RunOptions.Experimental.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.RunOptions.TraceLevel = {
  NO_TRACE: 0,
  SOFTWARE_TRACE: 1,
  HARDWARE_TRACE: 2,
  FULL_TRACE: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RunOptions.Experimental = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.RunOptions.Experimental, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RunOptions.Experimental.displayName = 'proto.tensorflow.RunOptions.Experimental';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RunOptions.Experimental.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RunOptions.Experimental.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RunOptions.Experimental} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunOptions.Experimental.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectiveGraphKey: jspb.Message.getFieldWithDefault(msg, 1, 0),
    useRunHandlerPool: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RunOptions.Experimental}
 */
proto.tensorflow.RunOptions.Experimental.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RunOptions.Experimental;
  return proto.tensorflow.RunOptions.Experimental.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RunOptions.Experimental} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RunOptions.Experimental}
 */
proto.tensorflow.RunOptions.Experimental.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCollectiveGraphKey(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseRunHandlerPool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RunOptions.Experimental.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RunOptions.Experimental.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RunOptions.Experimental} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunOptions.Experimental.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectiveGraphKey();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUseRunHandlerPool();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 collective_graph_key = 1;
 * @return {number}
 */
proto.tensorflow.RunOptions.Experimental.prototype.getCollectiveGraphKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.RunOptions.Experimental.prototype.setCollectiveGraphKey = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool use_run_handler_pool = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RunOptions.Experimental.prototype.getUseRunHandlerPool = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.RunOptions.Experimental.prototype.setUseRunHandlerPool = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional TraceLevel trace_level = 1;
 * @return {!proto.tensorflow.RunOptions.TraceLevel}
 */
proto.tensorflow.RunOptions.prototype.getTraceLevel = function() {
  return /** @type {!proto.tensorflow.RunOptions.TraceLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tensorflow.RunOptions.TraceLevel} value */
proto.tensorflow.RunOptions.prototype.setTraceLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 timeout_in_ms = 2;
 * @return {number}
 */
proto.tensorflow.RunOptions.prototype.getTimeoutInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.RunOptions.prototype.setTimeoutInMs = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 inter_op_thread_pool = 3;
 * @return {number}
 */
proto.tensorflow.RunOptions.prototype.getInterOpThreadPool = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.RunOptions.prototype.setInterOpThreadPool = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool output_partition_graphs = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RunOptions.prototype.getOutputPartitionGraphs = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.tensorflow.RunOptions.prototype.setOutputPartitionGraphs = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional DebugOptions debug_options = 6;
 * @return {?proto.tensorflow.DebugOptions}
 */
proto.tensorflow.RunOptions.prototype.getDebugOptions = function() {
  return /** @type{?proto.tensorflow.DebugOptions} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_protobuf_debug_pb.DebugOptions, 6));
};


/** @param {?proto.tensorflow.DebugOptions|undefined} value */
proto.tensorflow.RunOptions.prototype.setDebugOptions = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.tensorflow.RunOptions.prototype.clearDebugOptions = function() {
  this.setDebugOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RunOptions.prototype.hasDebugOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool report_tensor_allocations_upon_oom = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RunOptions.prototype.getReportTensorAllocationsUponOom = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.tensorflow.RunOptions.prototype.setReportTensorAllocationsUponOom = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional Experimental experimental = 8;
 * @return {?proto.tensorflow.RunOptions.Experimental}
 */
proto.tensorflow.RunOptions.prototype.getExperimental = function() {
  return /** @type{?proto.tensorflow.RunOptions.Experimental} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.RunOptions.Experimental, 8));
};


/** @param {?proto.tensorflow.RunOptions.Experimental|undefined} value */
proto.tensorflow.RunOptions.prototype.setExperimental = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.tensorflow.RunOptions.prototype.clearExperimental = function() {
  this.setExperimental(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RunOptions.prototype.hasExperimental = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RunMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.RunMetadata.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.RunMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RunMetadata.displayName = 'proto.tensorflow.RunMetadata';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.RunMetadata.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RunMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RunMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RunMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepStats: (f = msg.getStepStats()) && tensorflow_core_framework_step_stats_pb.StepStats.toObject(includeInstance, f),
    costGraph: (f = msg.getCostGraph()) && tensorflow_core_framework_cost_graph_pb.CostGraphDef.toObject(includeInstance, f),
    partitionGraphsList: jspb.Message.toObjectList(msg.getPartitionGraphsList(),
    tensorflow_core_framework_graph_pb.GraphDef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RunMetadata}
 */
proto.tensorflow.RunMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RunMetadata;
  return proto.tensorflow.RunMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RunMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RunMetadata}
 */
proto.tensorflow.RunMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_core_framework_step_stats_pb.StepStats;
      reader.readMessage(value,tensorflow_core_framework_step_stats_pb.StepStats.deserializeBinaryFromReader);
      msg.setStepStats(value);
      break;
    case 2:
      var value = new tensorflow_core_framework_cost_graph_pb.CostGraphDef;
      reader.readMessage(value,tensorflow_core_framework_cost_graph_pb.CostGraphDef.deserializeBinaryFromReader);
      msg.setCostGraph(value);
      break;
    case 3:
      var value = new tensorflow_core_framework_graph_pb.GraphDef;
      reader.readMessage(value,tensorflow_core_framework_graph_pb.GraphDef.deserializeBinaryFromReader);
      msg.addPartitionGraphs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RunMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RunMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RunMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RunMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_core_framework_step_stats_pb.StepStats.serializeBinaryToWriter
    );
  }
  f = message.getCostGraph();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_core_framework_cost_graph_pb.CostGraphDef.serializeBinaryToWriter
    );
  }
  f = message.getPartitionGraphsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      tensorflow_core_framework_graph_pb.GraphDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional StepStats step_stats = 1;
 * @return {?proto.tensorflow.StepStats}
 */
proto.tensorflow.RunMetadata.prototype.getStepStats = function() {
  return /** @type{?proto.tensorflow.StepStats} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_step_stats_pb.StepStats, 1));
};


/** @param {?proto.tensorflow.StepStats|undefined} value */
proto.tensorflow.RunMetadata.prototype.setStepStats = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.RunMetadata.prototype.clearStepStats = function() {
  this.setStepStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RunMetadata.prototype.hasStepStats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CostGraphDef cost_graph = 2;
 * @return {?proto.tensorflow.CostGraphDef}
 */
proto.tensorflow.RunMetadata.prototype.getCostGraph = function() {
  return /** @type{?proto.tensorflow.CostGraphDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_cost_graph_pb.CostGraphDef, 2));
};


/** @param {?proto.tensorflow.CostGraphDef|undefined} value */
proto.tensorflow.RunMetadata.prototype.setCostGraph = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.RunMetadata.prototype.clearCostGraph = function() {
  this.setCostGraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RunMetadata.prototype.hasCostGraph = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated GraphDef partition_graphs = 3;
 * @return {!Array.<!proto.tensorflow.GraphDef>}
 */
proto.tensorflow.RunMetadata.prototype.getPartitionGraphsList = function() {
  return /** @type{!Array.<!proto.tensorflow.GraphDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_graph_pb.GraphDef, 3));
};


/** @param {!Array.<!proto.tensorflow.GraphDef>} value */
proto.tensorflow.RunMetadata.prototype.setPartitionGraphsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.GraphDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.GraphDef}
 */
proto.tensorflow.RunMetadata.prototype.addPartitionGraphs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.GraphDef, opt_index);
};


proto.tensorflow.RunMetadata.prototype.clearPartitionGraphsList = function() {
  this.setPartitionGraphsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.TensorConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.TensorConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.TensorConnection.displayName = 'proto.tensorflow.TensorConnection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.TensorConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.TensorConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.TensorConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.TensorConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromTensor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toTensor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.TensorConnection}
 */
proto.tensorflow.TensorConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.TensorConnection;
  return proto.tensorflow.TensorConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.TensorConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.TensorConnection}
 */
proto.tensorflow.TensorConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromTensor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToTensor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.TensorConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.TensorConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.TensorConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.TensorConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromTensor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToTensor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string from_tensor = 1;
 * @return {string}
 */
proto.tensorflow.TensorConnection.prototype.getFromTensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.TensorConnection.prototype.setFromTensor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_tensor = 2;
 * @return {string}
 */
proto.tensorflow.TensorConnection.prototype.getToTensor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.TensorConnection.prototype.setToTensor = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CallableOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.CallableOptions.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.CallableOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CallableOptions.displayName = 'proto.tensorflow.CallableOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.CallableOptions.repeatedFields_ = [1,2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CallableOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CallableOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CallableOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CallableOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedList: jspb.Message.getRepeatedField(msg, 1),
    fetchList: jspb.Message.getRepeatedField(msg, 2),
    targetList: jspb.Message.getRepeatedField(msg, 3),
    runOptions: (f = msg.getRunOptions()) && proto.tensorflow.RunOptions.toObject(includeInstance, f),
    tensorConnectionList: jspb.Message.toObjectList(msg.getTensorConnectionList(),
    proto.tensorflow.TensorConnection.toObject, includeInstance),
    feedDevicesMap: (f = msg.getFeedDevicesMap()) ? f.toObject(includeInstance, undefined) : [],
    fetchDevicesMap: (f = msg.getFetchDevicesMap()) ? f.toObject(includeInstance, undefined) : [],
    fetchSkipSync: jspb.Message.getFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CallableOptions}
 */
proto.tensorflow.CallableOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CallableOptions;
  return proto.tensorflow.CallableOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CallableOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CallableOptions}
 */
proto.tensorflow.CallableOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFeed(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFetch(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTarget(value);
      break;
    case 4:
      var value = new proto.tensorflow.RunOptions;
      reader.readMessage(value,proto.tensorflow.RunOptions.deserializeBinaryFromReader);
      msg.setRunOptions(value);
      break;
    case 5:
      var value = new proto.tensorflow.TensorConnection;
      reader.readMessage(value,proto.tensorflow.TensorConnection.deserializeBinaryFromReader);
      msg.addTensorConnection(value);
      break;
    case 6:
      var value = msg.getFeedDevicesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 7:
      var value = msg.getFetchDevicesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFetchSkipSync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CallableOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CallableOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CallableOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.CallableOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getFetchList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTargetList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRunOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.RunOptions.serializeBinaryToWriter
    );
  }
  f = message.getTensorConnectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tensorflow.TensorConnection.serializeBinaryToWriter
    );
  }
  f = message.getFeedDevicesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getFetchDevicesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getFetchSkipSync();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * repeated string feed = 1;
 * @return {!Array.<string>}
 */
proto.tensorflow.CallableOptions.prototype.getFeedList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.tensorflow.CallableOptions.prototype.setFeedList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.CallableOptions.prototype.addFeed = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.tensorflow.CallableOptions.prototype.clearFeedList = function() {
  this.setFeedList([]);
};


/**
 * repeated string fetch = 2;
 * @return {!Array.<string>}
 */
proto.tensorflow.CallableOptions.prototype.getFetchList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.tensorflow.CallableOptions.prototype.setFetchList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.CallableOptions.prototype.addFetch = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.tensorflow.CallableOptions.prototype.clearFetchList = function() {
  this.setFetchList([]);
};


/**
 * repeated string target = 3;
 * @return {!Array.<string>}
 */
proto.tensorflow.CallableOptions.prototype.getTargetList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.tensorflow.CallableOptions.prototype.setTargetList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.CallableOptions.prototype.addTarget = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.tensorflow.CallableOptions.prototype.clearTargetList = function() {
  this.setTargetList([]);
};


/**
 * optional RunOptions run_options = 4;
 * @return {?proto.tensorflow.RunOptions}
 */
proto.tensorflow.CallableOptions.prototype.getRunOptions = function() {
  return /** @type{?proto.tensorflow.RunOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.RunOptions, 4));
};


/** @param {?proto.tensorflow.RunOptions|undefined} value */
proto.tensorflow.CallableOptions.prototype.setRunOptions = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tensorflow.CallableOptions.prototype.clearRunOptions = function() {
  this.setRunOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.CallableOptions.prototype.hasRunOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated TensorConnection tensor_connection = 5;
 * @return {!Array.<!proto.tensorflow.TensorConnection>}
 */
proto.tensorflow.CallableOptions.prototype.getTensorConnectionList = function() {
  return /** @type{!Array.<!proto.tensorflow.TensorConnection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.TensorConnection, 5));
};


/** @param {!Array.<!proto.tensorflow.TensorConnection>} value */
proto.tensorflow.CallableOptions.prototype.setTensorConnectionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tensorflow.TensorConnection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorConnection}
 */
proto.tensorflow.CallableOptions.prototype.addTensorConnection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tensorflow.TensorConnection, opt_index);
};


proto.tensorflow.CallableOptions.prototype.clearTensorConnectionList = function() {
  this.setTensorConnectionList([]);
};


/**
 * map<string, string> feed_devices = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorflow.CallableOptions.prototype.getFeedDevicesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.tensorflow.CallableOptions.prototype.clearFeedDevicesMap = function() {
  this.getFeedDevicesMap().clear();
};


/**
 * map<string, string> fetch_devices = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorflow.CallableOptions.prototype.getFetchDevicesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.tensorflow.CallableOptions.prototype.clearFetchDevicesMap = function() {
  this.getFetchDevicesMap().clear();
};


/**
 * optional bool fetch_skip_sync = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.CallableOptions.prototype.getFetchSkipSync = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.tensorflow.CallableOptions.prototype.setFetchSkipSync = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


goog.object.extend(exports, proto.tensorflow);
