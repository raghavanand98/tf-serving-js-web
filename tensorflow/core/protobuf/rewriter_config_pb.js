/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_attr_value_pb = require('../../../tensorflow/core/framework/attr_value_pb.js');
goog.exportSymbol('proto.tensorflow.AutoParallelOptions', null, global);
goog.exportSymbol('proto.tensorflow.RewriterConfig', null, global);
goog.exportSymbol('proto.tensorflow.RewriterConfig.CustomGraphOptimizer', null, global);
goog.exportSymbol('proto.tensorflow.RewriterConfig.MemOptType', null, global);
goog.exportSymbol('proto.tensorflow.RewriterConfig.NumIterationsType', null, global);
goog.exportSymbol('proto.tensorflow.RewriterConfig.Toggle', null, global);
goog.exportSymbol('proto.tensorflow.ScopedAllocatorOptions', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.AutoParallelOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.AutoParallelOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.AutoParallelOptions.displayName = 'proto.tensorflow.AutoParallelOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.AutoParallelOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.AutoParallelOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.AutoParallelOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutoParallelOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enable: jspb.Message.getFieldWithDefault(msg, 1, false),
    numReplicas: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.AutoParallelOptions}
 */
proto.tensorflow.AutoParallelOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.AutoParallelOptions;
  return proto.tensorflow.AutoParallelOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.AutoParallelOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.AutoParallelOptions}
 */
proto.tensorflow.AutoParallelOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumReplicas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.AutoParallelOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.AutoParallelOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.AutoParallelOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.AutoParallelOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNumReplicas();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.AutoParallelOptions.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.tensorflow.AutoParallelOptions.prototype.setEnable = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 num_replicas = 2;
 * @return {number}
 */
proto.tensorflow.AutoParallelOptions.prototype.getNumReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.AutoParallelOptions.prototype.setNumReplicas = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.ScopedAllocatorOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.ScopedAllocatorOptions.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.ScopedAllocatorOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.ScopedAllocatorOptions.displayName = 'proto.tensorflow.ScopedAllocatorOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.ScopedAllocatorOptions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.ScopedAllocatorOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.ScopedAllocatorOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.ScopedAllocatorOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ScopedAllocatorOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableOpList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.ScopedAllocatorOptions}
 */
proto.tensorflow.ScopedAllocatorOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.ScopedAllocatorOptions;
  return proto.tensorflow.ScopedAllocatorOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.ScopedAllocatorOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.ScopedAllocatorOptions}
 */
proto.tensorflow.ScopedAllocatorOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEnableOp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.ScopedAllocatorOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.ScopedAllocatorOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.ScopedAllocatorOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.ScopedAllocatorOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableOpList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string enable_op = 1;
 * @return {!Array.<string>}
 */
proto.tensorflow.ScopedAllocatorOptions.prototype.getEnableOpList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.tensorflow.ScopedAllocatorOptions.prototype.setEnableOpList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.ScopedAllocatorOptions.prototype.addEnableOp = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.tensorflow.ScopedAllocatorOptions.prototype.clearEnableOpList = function() {
  this.setEnableOpList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RewriterConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.RewriterConfig.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.RewriterConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RewriterConfig.displayName = 'proto.tensorflow.RewriterConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.RewriterConfig.repeatedFields_ = [100,200];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RewriterConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RewriterConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RewriterConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RewriterConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    layoutOptimizer: jspb.Message.getFieldWithDefault(msg, 1, 0),
    constantFolding: jspb.Message.getFieldWithDefault(msg, 3, 0),
    shapeOptimization: jspb.Message.getFieldWithDefault(msg, 13, 0),
    remapping: jspb.Message.getFieldWithDefault(msg, 14, 0),
    arithmeticOptimization: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dependencyOptimization: jspb.Message.getFieldWithDefault(msg, 8, 0),
    loopOptimization: jspb.Message.getFieldWithDefault(msg, 9, 0),
    functionOptimization: jspb.Message.getFieldWithDefault(msg, 10, 0),
    debugStripper: jspb.Message.getFieldWithDefault(msg, 11, 0),
    disableModelPruning: jspb.Message.getFieldWithDefault(msg, 2, false),
    scopedAllocatorOptimization: jspb.Message.getFieldWithDefault(msg, 15, 0),
    pinToHostOptimization: jspb.Message.getFieldWithDefault(msg, 18, 0),
    disableMetaOptimizer: jspb.Message.getFieldWithDefault(msg, 19, false),
    metaOptimizerIterations: jspb.Message.getFieldWithDefault(msg, 12, 0),
    minGraphNodes: jspb.Message.getFieldWithDefault(msg, 17, 0),
    memoryOptimization: jspb.Message.getFieldWithDefault(msg, 4, 0),
    memoryOptimizerTargetNodeNameScope: jspb.Message.getFieldWithDefault(msg, 6, ""),
    metaOptimizerTimeoutMs: jspb.Message.getFieldWithDefault(msg, 20, 0),
    autoParallel: (f = msg.getAutoParallel()) && proto.tensorflow.AutoParallelOptions.toObject(includeInstance, f),
    failOnOptimizerErrors: jspb.Message.getFieldWithDefault(msg, 21, false),
    scopedAllocatorOpts: (f = msg.getScopedAllocatorOpts()) && proto.tensorflow.ScopedAllocatorOptions.toObject(includeInstance, f),
    optimizersList: jspb.Message.getRepeatedField(msg, 100),
    customOptimizersList: jspb.Message.toObjectList(msg.getCustomOptimizersList(),
    proto.tensorflow.RewriterConfig.CustomGraphOptimizer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RewriterConfig}
 */
proto.tensorflow.RewriterConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RewriterConfig;
  return proto.tensorflow.RewriterConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RewriterConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RewriterConfig}
 */
proto.tensorflow.RewriterConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setLayoutOptimizer(value);
      break;
    case 3:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setConstantFolding(value);
      break;
    case 13:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setShapeOptimization(value);
      break;
    case 14:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setRemapping(value);
      break;
    case 7:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setArithmeticOptimization(value);
      break;
    case 8:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setDependencyOptimization(value);
      break;
    case 9:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setLoopOptimization(value);
      break;
    case 10:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setFunctionOptimization(value);
      break;
    case 11:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setDebugStripper(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableModelPruning(value);
      break;
    case 15:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setScopedAllocatorOptimization(value);
      break;
    case 18:
      var value = /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (reader.readEnum());
      msg.setPinToHostOptimization(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableMetaOptimizer(value);
      break;
    case 12:
      var value = /** @type {!proto.tensorflow.RewriterConfig.NumIterationsType} */ (reader.readEnum());
      msg.setMetaOptimizerIterations(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinGraphNodes(value);
      break;
    case 4:
      var value = /** @type {!proto.tensorflow.RewriterConfig.MemOptType} */ (reader.readEnum());
      msg.setMemoryOptimization(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemoryOptimizerTargetNodeNameScope(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMetaOptimizerTimeoutMs(value);
      break;
    case 5:
      var value = new proto.tensorflow.AutoParallelOptions;
      reader.readMessage(value,proto.tensorflow.AutoParallelOptions.deserializeBinaryFromReader);
      msg.setAutoParallel(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailOnOptimizerErrors(value);
      break;
    case 16:
      var value = new proto.tensorflow.ScopedAllocatorOptions;
      reader.readMessage(value,proto.tensorflow.ScopedAllocatorOptions.deserializeBinaryFromReader);
      msg.setScopedAllocatorOpts(value);
      break;
    case 100:
      var value = /** @type {string} */ (reader.readString());
      msg.addOptimizers(value);
      break;
    case 200:
      var value = new proto.tensorflow.RewriterConfig.CustomGraphOptimizer;
      reader.readMessage(value,proto.tensorflow.RewriterConfig.CustomGraphOptimizer.deserializeBinaryFromReader);
      msg.addCustomOptimizers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RewriterConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RewriterConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RewriterConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RewriterConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayoutOptimizer();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConstantFolding();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getShapeOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getRemapping();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getArithmeticOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getDependencyOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getLoopOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getFunctionOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getDebugStripper();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getDisableModelPruning();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getScopedAllocatorOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getPinToHostOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = message.getDisableMetaOptimizer();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getMetaOptimizerIterations();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getMinGraphNodes();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getMemoryOptimization();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMemoryOptimizerTargetNodeNameScope();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMetaOptimizerTimeoutMs();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getAutoParallel();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.AutoParallelOptions.serializeBinaryToWriter
    );
  }
  f = message.getFailOnOptimizerErrors();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getScopedAllocatorOpts();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.tensorflow.ScopedAllocatorOptions.serializeBinaryToWriter
    );
  }
  f = message.getOptimizersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      100,
      f
    );
  }
  f = message.getCustomOptimizersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      200,
      f,
      proto.tensorflow.RewriterConfig.CustomGraphOptimizer.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.RewriterConfig.Toggle = {
  DEFAULT: 0,
  ON: 1,
  OFF: 2,
  AGGRESSIVE: 3
};

/**
 * @enum {number}
 */
proto.tensorflow.RewriterConfig.NumIterationsType = {
  DEFAULT_NUM_ITERS: 0,
  ONE: 1,
  TWO: 2
};

/**
 * @enum {number}
 */
proto.tensorflow.RewriterConfig.MemOptType = {
  DEFAULT_MEM_OPT: 0,
  NO_MEM_OPT: 1,
  MANUAL: 2,
  SWAPPING_HEURISTICS: 4,
  RECOMPUTATION_HEURISTICS: 5,
  SCHEDULING_HEURISTICS: 6,
  HEURISTICS: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.RewriterConfig.CustomGraphOptimizer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RewriterConfig.CustomGraphOptimizer.displayName = 'proto.tensorflow.RewriterConfig.CustomGraphOptimizer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RewriterConfig.CustomGraphOptimizer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parameterMapMap: (f = msg.getParameterMapMap()) ? f.toObject(includeInstance, proto.tensorflow.AttrValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RewriterConfig.CustomGraphOptimizer;
  return proto.tensorflow.RewriterConfig.CustomGraphOptimizer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = msg.getParameterMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.AttrValue.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RewriterConfig.CustomGraphOptimizer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParameterMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.AttrValue.serializeBinaryToWriter);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, AttrValue> parameter_map = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.tensorflow.AttrValue>}
 */
proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.getParameterMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.tensorflow.AttrValue>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tensorflow.AttrValue));
};


proto.tensorflow.RewriterConfig.CustomGraphOptimizer.prototype.clearParameterMapMap = function() {
  this.getParameterMapMap().clear();
};


/**
 * optional Toggle layout_optimizer = 1;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getLayoutOptimizer = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setLayoutOptimizer = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Toggle constant_folding = 3;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getConstantFolding = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setConstantFolding = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Toggle shape_optimization = 13;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getShapeOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setShapeOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional Toggle remapping = 14;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getRemapping = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setRemapping = function(value) {
  jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional Toggle arithmetic_optimization = 7;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getArithmeticOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setArithmeticOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Toggle dependency_optimization = 8;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getDependencyOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setDependencyOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Toggle loop_optimization = 9;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getLoopOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setLoopOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Toggle function_optimization = 10;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getFunctionOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setFunctionOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Toggle debug_stripper = 11;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getDebugStripper = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setDebugStripper = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool disable_model_pruning = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RewriterConfig.prototype.getDisableModelPruning = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.RewriterConfig.prototype.setDisableModelPruning = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Toggle scoped_allocator_optimization = 15;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getScopedAllocatorOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setScopedAllocatorOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional Toggle pin_to_host_optimization = 18;
 * @return {!proto.tensorflow.RewriterConfig.Toggle}
 */
proto.tensorflow.RewriterConfig.prototype.getPinToHostOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.Toggle} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.Toggle} value */
proto.tensorflow.RewriterConfig.prototype.setPinToHostOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 18, value);
};


/**
 * optional bool disable_meta_optimizer = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RewriterConfig.prototype.getDisableMetaOptimizer = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.tensorflow.RewriterConfig.prototype.setDisableMetaOptimizer = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional NumIterationsType meta_optimizer_iterations = 12;
 * @return {!proto.tensorflow.RewriterConfig.NumIterationsType}
 */
proto.tensorflow.RewriterConfig.prototype.getMetaOptimizerIterations = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.NumIterationsType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.NumIterationsType} value */
proto.tensorflow.RewriterConfig.prototype.setMetaOptimizerIterations = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional int32 min_graph_nodes = 17;
 * @return {number}
 */
proto.tensorflow.RewriterConfig.prototype.getMinGraphNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.tensorflow.RewriterConfig.prototype.setMinGraphNodes = function(value) {
  jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional MemOptType memory_optimization = 4;
 * @return {!proto.tensorflow.RewriterConfig.MemOptType}
 */
proto.tensorflow.RewriterConfig.prototype.getMemoryOptimization = function() {
  return /** @type {!proto.tensorflow.RewriterConfig.MemOptType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.tensorflow.RewriterConfig.MemOptType} value */
proto.tensorflow.RewriterConfig.prototype.setMemoryOptimization = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string memory_optimizer_target_node_name_scope = 6;
 * @return {string}
 */
proto.tensorflow.RewriterConfig.prototype.getMemoryOptimizerTargetNodeNameScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.RewriterConfig.prototype.setMemoryOptimizerTargetNodeNameScope = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 meta_optimizer_timeout_ms = 20;
 * @return {number}
 */
proto.tensorflow.RewriterConfig.prototype.getMetaOptimizerTimeoutMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.tensorflow.RewriterConfig.prototype.setMetaOptimizerTimeoutMs = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional AutoParallelOptions auto_parallel = 5;
 * @return {?proto.tensorflow.AutoParallelOptions}
 */
proto.tensorflow.RewriterConfig.prototype.getAutoParallel = function() {
  return /** @type{?proto.tensorflow.AutoParallelOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AutoParallelOptions, 5));
};


/** @param {?proto.tensorflow.AutoParallelOptions|undefined} value */
proto.tensorflow.RewriterConfig.prototype.setAutoParallel = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tensorflow.RewriterConfig.prototype.clearAutoParallel = function() {
  this.setAutoParallel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RewriterConfig.prototype.hasAutoParallel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool fail_on_optimizer_errors = 21;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RewriterConfig.prototype.getFailOnOptimizerErrors = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.tensorflow.RewriterConfig.prototype.setFailOnOptimizerErrors = function(value) {
  jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional ScopedAllocatorOptions scoped_allocator_opts = 16;
 * @return {?proto.tensorflow.ScopedAllocatorOptions}
 */
proto.tensorflow.RewriterConfig.prototype.getScopedAllocatorOpts = function() {
  return /** @type{?proto.tensorflow.ScopedAllocatorOptions} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ScopedAllocatorOptions, 16));
};


/** @param {?proto.tensorflow.ScopedAllocatorOptions|undefined} value */
proto.tensorflow.RewriterConfig.prototype.setScopedAllocatorOpts = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.tensorflow.RewriterConfig.prototype.clearScopedAllocatorOpts = function() {
  this.setScopedAllocatorOpts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RewriterConfig.prototype.hasScopedAllocatorOpts = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated string optimizers = 100;
 * @return {!Array.<string>}
 */
proto.tensorflow.RewriterConfig.prototype.getOptimizersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 100));
};


/** @param {!Array.<string>} value */
proto.tensorflow.RewriterConfig.prototype.setOptimizersList = function(value) {
  jspb.Message.setField(this, 100, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.RewriterConfig.prototype.addOptimizers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 100, value, opt_index);
};


proto.tensorflow.RewriterConfig.prototype.clearOptimizersList = function() {
  this.setOptimizersList([]);
};


/**
 * repeated CustomGraphOptimizer custom_optimizers = 200;
 * @return {!Array.<!proto.tensorflow.RewriterConfig.CustomGraphOptimizer>}
 */
proto.tensorflow.RewriterConfig.prototype.getCustomOptimizersList = function() {
  return /** @type{!Array.<!proto.tensorflow.RewriterConfig.CustomGraphOptimizer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.RewriterConfig.CustomGraphOptimizer, 200));
};


/** @param {!Array.<!proto.tensorflow.RewriterConfig.CustomGraphOptimizer>} value */
proto.tensorflow.RewriterConfig.prototype.setCustomOptimizersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 200, value);
};


/**
 * @param {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.RewriterConfig.CustomGraphOptimizer}
 */
proto.tensorflow.RewriterConfig.prototype.addCustomOptimizers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 200, opt_value, proto.tensorflow.RewriterConfig.CustomGraphOptimizer, opt_index);
};


proto.tensorflow.RewriterConfig.prototype.clearCustomOptimizersList = function() {
  this.setCustomOptimizersList([]);
};


goog.object.extend(exports, proto.tensorflow);
