/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_core_framework_attr_value_pb = require('../../../tensorflow/core/framework/attr_value_pb.js');
var tensorflow_core_framework_device_attributes_pb = require('../../../tensorflow/core/framework/device_attributes_pb.js');
var tensorflow_core_framework_function_pb = require('../../../tensorflow/core/framework/function_pb.js');
var tensorflow_core_framework_versions_pb = require('../../../tensorflow/core/framework/versions_pb.js');
var tensorflow_core_protobuf_tensorflow_server_pb = require('../../../tensorflow/core/protobuf/tensorflow_server_pb.js');
var tensorflow_core_framework_tensor_shape_pb = require('../../../tensorflow/core/framework/tensor_shape_pb.js');
var tensorflow_core_framework_tensor_pb = require('../../../tensorflow/core/framework/tensor_pb.js');
goog.exportSymbol('proto.tensorflow.eager.CloseContextRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.CloseContextResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.CreateContextRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.CreateContextResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.EnqueueRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.EnqueueResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.KeepAliveRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.KeepAliveResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.Operation', null, global);
goog.exportSymbol('proto.tensorflow.eager.QueueItem', null, global);
goog.exportSymbol('proto.tensorflow.eager.QueueResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.RegisterFunctionRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.RegisterFunctionResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.RemoteTensorHandle', null, global);
goog.exportSymbol('proto.tensorflow.eager.SendTensorRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.SendTensorResponse', null, global);
goog.exportSymbol('proto.tensorflow.eager.WaitQueueDoneRequest', null, global);
goog.exportSymbol('proto.tensorflow.eager.WaitQueueDoneResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.RemoteTensorHandle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.RemoteTensorHandle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.RemoteTensorHandle.displayName = 'proto.tensorflow.eager.RemoteTensorHandle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.RemoteTensorHandle.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.RemoteTensorHandle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.RemoteTensorHandle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RemoteTensorHandle.toObject = function(includeInstance, msg) {
  var f, obj = {
    opId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outputNum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.RemoteTensorHandle}
 */
proto.tensorflow.eager.RemoteTensorHandle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.RemoteTensorHandle;
  return proto.tensorflow.eager.RemoteTensorHandle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.RemoteTensorHandle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.RemoteTensorHandle}
 */
proto.tensorflow.eager.RemoteTensorHandle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOutputNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.RemoteTensorHandle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.RemoteTensorHandle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.RemoteTensorHandle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RemoteTensorHandle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOutputNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 op_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.RemoteTensorHandle.prototype.getOpId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.RemoteTensorHandle.prototype.setOpId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 output_num = 2;
 * @return {number}
 */
proto.tensorflow.eager.RemoteTensorHandle.prototype.getOutputNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.eager.RemoteTensorHandle.prototype.setOutputNum = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.Operation.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.Operation.displayName = 'proto.tensorflow.eager.Operation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.Operation.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.tensorflow.eager.RemoteTensorHandle.toObject, includeInstance),
    controlOpIdsList: jspb.Message.getRepeatedField(msg, 4),
    attrsMap: (f = msg.getAttrsMap()) ? f.toObject(includeInstance, proto.tensorflow.AttrValue.toObject) : [],
    device: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.Operation}
 */
proto.tensorflow.eager.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.Operation;
  return proto.tensorflow.eager.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.Operation}
 */
proto.tensorflow.eager.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.tensorflow.eager.RemoteTensorHandle;
      reader.readMessage(value,proto.tensorflow.eager.RemoteTensorHandle.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setControlOpIdsList(value);
      break;
    case 5:
      var value = msg.getAttrsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.AttrValue.deserializeBinaryFromReader);
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tensorflow.eager.RemoteTensorHandle.serializeBinaryToWriter
    );
  }
  f = message.getControlOpIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getAttrsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.AttrValue.serializeBinaryToWriter);
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.tensorflow.eager.Operation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.Operation.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tensorflow.eager.Operation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.eager.Operation.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated RemoteTensorHandle inputs = 3;
 * @return {!Array.<!proto.tensorflow.eager.RemoteTensorHandle>}
 */
proto.tensorflow.eager.Operation.prototype.getInputsList = function() {
  return /** @type{!Array.<!proto.tensorflow.eager.RemoteTensorHandle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.eager.RemoteTensorHandle, 3));
};


/** @param {!Array.<!proto.tensorflow.eager.RemoteTensorHandle>} value */
proto.tensorflow.eager.Operation.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.eager.RemoteTensorHandle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.eager.RemoteTensorHandle}
 */
proto.tensorflow.eager.Operation.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.eager.RemoteTensorHandle, opt_index);
};


proto.tensorflow.eager.Operation.prototype.clearInputsList = function() {
  this.setInputsList([]);
};


/**
 * repeated int64 control_op_ids = 4;
 * @return {!Array.<number>}
 */
proto.tensorflow.eager.Operation.prototype.getControlOpIdsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<number>} value */
proto.tensorflow.eager.Operation.prototype.setControlOpIdsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.tensorflow.eager.Operation.prototype.addControlOpIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tensorflow.eager.Operation.prototype.clearControlOpIdsList = function() {
  this.setControlOpIdsList([]);
};


/**
 * map<string, tensorflow.AttrValue> attrs = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.tensorflow.AttrValue>}
 */
proto.tensorflow.eager.Operation.prototype.getAttrsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.tensorflow.AttrValue>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.tensorflow.AttrValue));
};


proto.tensorflow.eager.Operation.prototype.clearAttrsMap = function() {
  this.getAttrsMap().clear();
};


/**
 * optional string device = 6;
 * @return {string}
 */
proto.tensorflow.eager.Operation.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.eager.Operation.prototype.setDevice = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.QueueItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.eager.QueueItem.oneofGroups_);
};
goog.inherits(proto.tensorflow.eager.QueueItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.QueueItem.displayName = 'proto.tensorflow.eager.QueueItem';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.eager.QueueItem.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tensorflow.eager.QueueItem.ItemCase = {
  ITEM_NOT_SET: 0,
  HANDLE_TO_DECREF: 1,
  OPERATION: 2
};

/**
 * @return {proto.tensorflow.eager.QueueItem.ItemCase}
 */
proto.tensorflow.eager.QueueItem.prototype.getItemCase = function() {
  return /** @type {proto.tensorflow.eager.QueueItem.ItemCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.eager.QueueItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.QueueItem.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.QueueItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.QueueItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.QueueItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    handleToDecref: (f = msg.getHandleToDecref()) && proto.tensorflow.eager.RemoteTensorHandle.toObject(includeInstance, f),
    operation: (f = msg.getOperation()) && proto.tensorflow.eager.Operation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.QueueItem}
 */
proto.tensorflow.eager.QueueItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.QueueItem;
  return proto.tensorflow.eager.QueueItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.QueueItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.QueueItem}
 */
proto.tensorflow.eager.QueueItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.eager.RemoteTensorHandle;
      reader.readMessage(value,proto.tensorflow.eager.RemoteTensorHandle.deserializeBinaryFromReader);
      msg.setHandleToDecref(value);
      break;
    case 2:
      var value = new proto.tensorflow.eager.Operation;
      reader.readMessage(value,proto.tensorflow.eager.Operation.deserializeBinaryFromReader);
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.QueueItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.QueueItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.QueueItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.QueueItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandleToDecref();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tensorflow.eager.RemoteTensorHandle.serializeBinaryToWriter
    );
  }
  f = message.getOperation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.eager.Operation.serializeBinaryToWriter
    );
  }
};


/**
 * optional RemoteTensorHandle handle_to_decref = 1;
 * @return {?proto.tensorflow.eager.RemoteTensorHandle}
 */
proto.tensorflow.eager.QueueItem.prototype.getHandleToDecref = function() {
  return /** @type{?proto.tensorflow.eager.RemoteTensorHandle} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.eager.RemoteTensorHandle, 1));
};


/** @param {?proto.tensorflow.eager.RemoteTensorHandle|undefined} value */
proto.tensorflow.eager.QueueItem.prototype.setHandleToDecref = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.eager.QueueItem.oneofGroups_[0], value);
};


proto.tensorflow.eager.QueueItem.prototype.clearHandleToDecref = function() {
  this.setHandleToDecref(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.eager.QueueItem.prototype.hasHandleToDecref = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Operation operation = 2;
 * @return {?proto.tensorflow.eager.Operation}
 */
proto.tensorflow.eager.QueueItem.prototype.getOperation = function() {
  return /** @type{?proto.tensorflow.eager.Operation} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.eager.Operation, 2));
};


/** @param {?proto.tensorflow.eager.Operation|undefined} value */
proto.tensorflow.eager.QueueItem.prototype.setOperation = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.eager.QueueItem.oneofGroups_[0], value);
};


proto.tensorflow.eager.QueueItem.prototype.clearOperation = function() {
  this.setOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.eager.QueueItem.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.QueueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.QueueResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.QueueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.QueueResponse.displayName = 'proto.tensorflow.eager.QueueResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.QueueResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.QueueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.QueueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.QueueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.QueueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shapeList: jspb.Message.toObjectList(msg.getShapeList(),
    tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.QueueResponse}
 */
proto.tensorflow.eager.QueueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.QueueResponse;
  return proto.tensorflow.eager.QueueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.QueueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.QueueResponse}
 */
proto.tensorflow.eager.QueueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_core_framework_tensor_shape_pb.TensorShapeProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.deserializeBinaryFromReader);
      msg.addShape(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.QueueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.QueueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.QueueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.QueueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tensorflow_core_framework_tensor_shape_pb.TensorShapeProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated tensorflow.TensorShapeProto shape = 1;
 * @return {!Array.<!proto.tensorflow.TensorShapeProto>}
 */
proto.tensorflow.eager.QueueResponse.prototype.getShapeList = function() {
  return /** @type{!Array.<!proto.tensorflow.TensorShapeProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_tensor_shape_pb.TensorShapeProto, 1));
};


/** @param {!Array.<!proto.tensorflow.TensorShapeProto>} value */
proto.tensorflow.eager.QueueResponse.prototype.setShapeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.TensorShapeProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorShapeProto}
 */
proto.tensorflow.eager.QueueResponse.prototype.addShape = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.TensorShapeProto, opt_index);
};


proto.tensorflow.eager.QueueResponse.prototype.clearShapeList = function() {
  this.setShapeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.CreateContextRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.CreateContextRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.CreateContextRequest.displayName = 'proto.tensorflow.eager.CreateContextRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.CreateContextRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.CreateContextRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CreateContextRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverDef: (f = msg.getServerDef()) && tensorflow_core_protobuf_tensorflow_server_pb.ServerDef.toObject(includeInstance, f),
    async: jspb.Message.getFieldWithDefault(msg, 2, false),
    keepAliveSecs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    versionDef: (f = msg.getVersionDef()) && tensorflow_core_framework_versions_pb.VersionDef.toObject(includeInstance, f),
    rendezvousId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.CreateContextRequest}
 */
proto.tensorflow.eager.CreateContextRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.CreateContextRequest;
  return proto.tensorflow.eager.CreateContextRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.CreateContextRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.CreateContextRequest}
 */
proto.tensorflow.eager.CreateContextRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_core_protobuf_tensorflow_server_pb.ServerDef;
      reader.readMessage(value,tensorflow_core_protobuf_tensorflow_server_pb.ServerDef.deserializeBinaryFromReader);
      msg.setServerDef(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsync(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setKeepAliveSecs(value);
      break;
    case 4:
      var value = new tensorflow_core_framework_versions_pb.VersionDef;
      reader.readMessage(value,tensorflow_core_framework_versions_pb.VersionDef.deserializeBinaryFromReader);
      msg.setVersionDef(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRendezvousId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.CreateContextRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.CreateContextRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CreateContextRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerDef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_core_protobuf_tensorflow_server_pb.ServerDef.serializeBinaryToWriter
    );
  }
  f = message.getAsync();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getKeepAliveSecs();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVersionDef();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      tensorflow_core_framework_versions_pb.VersionDef.serializeBinaryToWriter
    );
  }
  f = message.getRendezvousId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional tensorflow.ServerDef server_def = 1;
 * @return {?proto.tensorflow.ServerDef}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.getServerDef = function() {
  return /** @type{?proto.tensorflow.ServerDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_protobuf_tensorflow_server_pb.ServerDef, 1));
};


/** @param {?proto.tensorflow.ServerDef|undefined} value */
proto.tensorflow.eager.CreateContextRequest.prototype.setServerDef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.eager.CreateContextRequest.prototype.clearServerDef = function() {
  this.setServerDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.hasServerDef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool async = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.getAsync = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.tensorflow.eager.CreateContextRequest.prototype.setAsync = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 keep_alive_secs = 3;
 * @return {number}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.getKeepAliveSecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.eager.CreateContextRequest.prototype.setKeepAliveSecs = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional tensorflow.VersionDef version_def = 4;
 * @return {?proto.tensorflow.VersionDef}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.getVersionDef = function() {
  return /** @type{?proto.tensorflow.VersionDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_versions_pb.VersionDef, 4));
};


/** @param {?proto.tensorflow.VersionDef|undefined} value */
proto.tensorflow.eager.CreateContextRequest.prototype.setVersionDef = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tensorflow.eager.CreateContextRequest.prototype.clearVersionDef = function() {
  this.setVersionDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.hasVersionDef = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 rendezvous_id = 5;
 * @return {number}
 */
proto.tensorflow.eager.CreateContextRequest.prototype.getRendezvousId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tensorflow.eager.CreateContextRequest.prototype.setRendezvousId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.CreateContextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.CreateContextResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.CreateContextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.CreateContextResponse.displayName = 'proto.tensorflow.eager.CreateContextResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.CreateContextResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.CreateContextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.CreateContextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.CreateContextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CreateContextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    deviceAttributesList: jspb.Message.toObjectList(msg.getDeviceAttributesList(),
    tensorflow_core_framework_device_attributes_pb.DeviceAttributes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.CreateContextResponse}
 */
proto.tensorflow.eager.CreateContextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.CreateContextResponse;
  return proto.tensorflow.eager.CreateContextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.CreateContextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.CreateContextResponse}
 */
proto.tensorflow.eager.CreateContextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    case 2:
      var value = new tensorflow_core_framework_device_attributes_pb.DeviceAttributes;
      reader.readMessage(value,tensorflow_core_framework_device_attributes_pb.DeviceAttributes.deserializeBinaryFromReader);
      msg.addDeviceAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.CreateContextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.CreateContextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.CreateContextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CreateContextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getDeviceAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      tensorflow_core_framework_device_attributes_pb.DeviceAttributes.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.CreateContextResponse.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.CreateContextResponse.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated tensorflow.DeviceAttributes device_attributes = 2;
 * @return {!Array.<!proto.tensorflow.DeviceAttributes>}
 */
proto.tensorflow.eager.CreateContextResponse.prototype.getDeviceAttributesList = function() {
  return /** @type{!Array.<!proto.tensorflow.DeviceAttributes>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_device_attributes_pb.DeviceAttributes, 2));
};


/** @param {!Array.<!proto.tensorflow.DeviceAttributes>} value */
proto.tensorflow.eager.CreateContextResponse.prototype.setDeviceAttributesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tensorflow.DeviceAttributes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.DeviceAttributes}
 */
proto.tensorflow.eager.CreateContextResponse.prototype.addDeviceAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tensorflow.DeviceAttributes, opt_index);
};


proto.tensorflow.eager.CreateContextResponse.prototype.clearDeviceAttributesList = function() {
  this.setDeviceAttributesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.EnqueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.EnqueueRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.EnqueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.EnqueueRequest.displayName = 'proto.tensorflow.eager.EnqueueRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.EnqueueRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.EnqueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.EnqueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.EnqueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.EnqueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queueList: jspb.Message.toObjectList(msg.getQueueList(),
    proto.tensorflow.eager.QueueItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.EnqueueRequest}
 */
proto.tensorflow.eager.EnqueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.EnqueueRequest;
  return proto.tensorflow.eager.EnqueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.EnqueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.EnqueueRequest}
 */
proto.tensorflow.eager.EnqueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    case 3:
      var value = new proto.tensorflow.eager.QueueItem;
      reader.readMessage(value,proto.tensorflow.eager.QueueItem.deserializeBinaryFromReader);
      msg.addQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.EnqueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.EnqueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.EnqueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.EnqueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getQueueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tensorflow.eager.QueueItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.EnqueueRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.EnqueueRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated QueueItem queue = 3;
 * @return {!Array.<!proto.tensorflow.eager.QueueItem>}
 */
proto.tensorflow.eager.EnqueueRequest.prototype.getQueueList = function() {
  return /** @type{!Array.<!proto.tensorflow.eager.QueueItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.eager.QueueItem, 3));
};


/** @param {!Array.<!proto.tensorflow.eager.QueueItem>} value */
proto.tensorflow.eager.EnqueueRequest.prototype.setQueueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.eager.QueueItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.eager.QueueItem}
 */
proto.tensorflow.eager.EnqueueRequest.prototype.addQueue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.eager.QueueItem, opt_index);
};


proto.tensorflow.eager.EnqueueRequest.prototype.clearQueueList = function() {
  this.setQueueList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.EnqueueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.EnqueueResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.EnqueueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.EnqueueResponse.displayName = 'proto.tensorflow.eager.EnqueueResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.EnqueueResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.EnqueueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.EnqueueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.EnqueueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.EnqueueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueResponseList: jspb.Message.toObjectList(msg.getQueueResponseList(),
    proto.tensorflow.eager.QueueResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.EnqueueResponse}
 */
proto.tensorflow.eager.EnqueueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.EnqueueResponse;
  return proto.tensorflow.eager.EnqueueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.EnqueueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.EnqueueResponse}
 */
proto.tensorflow.eager.EnqueueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.eager.QueueResponse;
      reader.readMessage(value,proto.tensorflow.eager.QueueResponse.deserializeBinaryFromReader);
      msg.addQueueResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.EnqueueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.EnqueueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.EnqueueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.EnqueueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.eager.QueueResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueueResponse queue_response = 1;
 * @return {!Array.<!proto.tensorflow.eager.QueueResponse>}
 */
proto.tensorflow.eager.EnqueueResponse.prototype.getQueueResponseList = function() {
  return /** @type{!Array.<!proto.tensorflow.eager.QueueResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.eager.QueueResponse, 1));
};


/** @param {!Array.<!proto.tensorflow.eager.QueueResponse>} value */
proto.tensorflow.eager.EnqueueResponse.prototype.setQueueResponseList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.eager.QueueResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.eager.QueueResponse}
 */
proto.tensorflow.eager.EnqueueResponse.prototype.addQueueResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.eager.QueueResponse, opt_index);
};


proto.tensorflow.eager.EnqueueResponse.prototype.clearQueueResponseList = function() {
  this.setQueueResponseList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.WaitQueueDoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.WaitQueueDoneRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.WaitQueueDoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.WaitQueueDoneRequest.displayName = 'proto.tensorflow.eager.WaitQueueDoneRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.WaitQueueDoneRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.WaitQueueDoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.WaitQueueDoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.WaitQueueDoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    opIdList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.WaitQueueDoneRequest}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.WaitQueueDoneRequest;
  return proto.tensorflow.eager.WaitQueueDoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.WaitQueueDoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.WaitQueueDoneRequest}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setOpIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.WaitQueueDoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.WaitQueueDoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.WaitQueueDoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getOpIdList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 op_id = 2;
 * @return {!Array.<number>}
 */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.getOpIdList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<number>} value */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.setOpIdList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.tensorflow.eager.WaitQueueDoneRequest.prototype.addOpId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.tensorflow.eager.WaitQueueDoneRequest.prototype.clearOpIdList = function() {
  this.setOpIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.WaitQueueDoneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.WaitQueueDoneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.WaitQueueDoneResponse.displayName = 'proto.tensorflow.eager.WaitQueueDoneResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.WaitQueueDoneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.WaitQueueDoneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.WaitQueueDoneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.WaitQueueDoneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.WaitQueueDoneResponse}
 */
proto.tensorflow.eager.WaitQueueDoneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.WaitQueueDoneResponse;
  return proto.tensorflow.eager.WaitQueueDoneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.WaitQueueDoneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.WaitQueueDoneResponse}
 */
proto.tensorflow.eager.WaitQueueDoneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.WaitQueueDoneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.WaitQueueDoneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.WaitQueueDoneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.WaitQueueDoneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.KeepAliveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.KeepAliveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.KeepAliveRequest.displayName = 'proto.tensorflow.eager.KeepAliveRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.KeepAliveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.KeepAliveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.KeepAliveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.KeepAliveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.KeepAliveRequest}
 */
proto.tensorflow.eager.KeepAliveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.KeepAliveRequest;
  return proto.tensorflow.eager.KeepAliveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.KeepAliveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.KeepAliveRequest}
 */
proto.tensorflow.eager.KeepAliveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.KeepAliveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.KeepAliveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.KeepAliveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.KeepAliveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.KeepAliveRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.KeepAliveRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.KeepAliveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.KeepAliveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.KeepAliveResponse.displayName = 'proto.tensorflow.eager.KeepAliveResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.KeepAliveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.KeepAliveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.KeepAliveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.KeepAliveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.KeepAliveResponse}
 */
proto.tensorflow.eager.KeepAliveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.KeepAliveResponse;
  return proto.tensorflow.eager.KeepAliveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.KeepAliveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.KeepAliveResponse}
 */
proto.tensorflow.eager.KeepAliveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.KeepAliveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.KeepAliveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.KeepAliveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.KeepAliveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.CloseContextRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.CloseContextRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.CloseContextRequest.displayName = 'proto.tensorflow.eager.CloseContextRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.CloseContextRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.CloseContextRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.CloseContextRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CloseContextRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.CloseContextRequest}
 */
proto.tensorflow.eager.CloseContextRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.CloseContextRequest;
  return proto.tensorflow.eager.CloseContextRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.CloseContextRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.CloseContextRequest}
 */
proto.tensorflow.eager.CloseContextRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.CloseContextRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.CloseContextRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.CloseContextRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CloseContextRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.CloseContextRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.CloseContextRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.CloseContextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.CloseContextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.CloseContextResponse.displayName = 'proto.tensorflow.eager.CloseContextResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.CloseContextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.CloseContextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.CloseContextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CloseContextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.CloseContextResponse}
 */
proto.tensorflow.eager.CloseContextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.CloseContextResponse;
  return proto.tensorflow.eager.CloseContextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.CloseContextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.CloseContextResponse}
 */
proto.tensorflow.eager.CloseContextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.CloseContextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.CloseContextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.CloseContextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.CloseContextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.RegisterFunctionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.RegisterFunctionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.RegisterFunctionRequest.displayName = 'proto.tensorflow.eager.RegisterFunctionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.RegisterFunctionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.RegisterFunctionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RegisterFunctionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    functionDef: (f = msg.getFunctionDef()) && tensorflow_core_framework_function_pb.FunctionDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.RegisterFunctionRequest}
 */
proto.tensorflow.eager.RegisterFunctionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.RegisterFunctionRequest;
  return proto.tensorflow.eager.RegisterFunctionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.RegisterFunctionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.RegisterFunctionRequest}
 */
proto.tensorflow.eager.RegisterFunctionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    case 2:
      var value = new tensorflow_core_framework_function_pb.FunctionDef;
      reader.readMessage(value,tensorflow_core_framework_function_pb.FunctionDef.deserializeBinaryFromReader);
      msg.setFunctionDef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.RegisterFunctionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.RegisterFunctionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RegisterFunctionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getFunctionDef();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_core_framework_function_pb.FunctionDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional tensorflow.FunctionDef function_def = 2;
 * @return {?proto.tensorflow.FunctionDef}
 */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.getFunctionDef = function() {
  return /** @type{?proto.tensorflow.FunctionDef} */ (
    jspb.Message.getWrapperField(this, tensorflow_core_framework_function_pb.FunctionDef, 2));
};


/** @param {?proto.tensorflow.FunctionDef|undefined} value */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.setFunctionDef = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.eager.RegisterFunctionRequest.prototype.clearFunctionDef = function() {
  this.setFunctionDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.eager.RegisterFunctionRequest.prototype.hasFunctionDef = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.RegisterFunctionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.RegisterFunctionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.RegisterFunctionResponse.displayName = 'proto.tensorflow.eager.RegisterFunctionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.RegisterFunctionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.RegisterFunctionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.RegisterFunctionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RegisterFunctionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.RegisterFunctionResponse}
 */
proto.tensorflow.eager.RegisterFunctionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.RegisterFunctionResponse;
  return proto.tensorflow.eager.RegisterFunctionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.RegisterFunctionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.RegisterFunctionResponse}
 */
proto.tensorflow.eager.RegisterFunctionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.RegisterFunctionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.RegisterFunctionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.RegisterFunctionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.RegisterFunctionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.SendTensorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.eager.SendTensorRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.eager.SendTensorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.SendTensorRequest.displayName = 'proto.tensorflow.eager.SendTensorRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.eager.SendTensorRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.SendTensorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.SendTensorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.SendTensorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    opId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tensorsList: jspb.Message.toObjectList(msg.getTensorsList(),
    tensorflow_core_framework_tensor_pb.TensorProto.toObject, includeInstance),
    deviceName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.SendTensorRequest}
 */
proto.tensorflow.eager.SendTensorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.SendTensorRequest;
  return proto.tensorflow.eager.SendTensorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.SendTensorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.SendTensorRequest}
 */
proto.tensorflow.eager.SendTensorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setContextId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpId(value);
      break;
    case 3:
      var value = new tensorflow_core_framework_tensor_pb.TensorProto;
      reader.readMessage(value,tensorflow_core_framework_tensor_pb.TensorProto.deserializeBinaryFromReader);
      msg.addTensors(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.SendTensorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.SendTensorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.SendTensorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getOpId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTensorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      tensorflow_core_framework_tensor_pb.TensorProto.serializeBinaryToWriter
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional fixed64 context_id = 1;
 * @return {number}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.getContextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.eager.SendTensorRequest.prototype.setContextId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 op_id = 2;
 * @return {number}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.getOpId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.eager.SendTensorRequest.prototype.setOpId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated tensorflow.TensorProto tensors = 3;
 * @return {!Array.<!proto.tensorflow.TensorProto>}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.getTensorsList = function() {
  return /** @type{!Array.<!proto.tensorflow.TensorProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorflow_core_framework_tensor_pb.TensorProto, 3));
};


/** @param {!Array.<!proto.tensorflow.TensorProto>} value */
proto.tensorflow.eager.SendTensorRequest.prototype.setTensorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.TensorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorProto}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.addTensors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.TensorProto, opt_index);
};


proto.tensorflow.eager.SendTensorRequest.prototype.clearTensorsList = function() {
  this.setTensorsList([]);
};


/**
 * optional string device_name = 4;
 * @return {string}
 */
proto.tensorflow.eager.SendTensorRequest.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.eager.SendTensorRequest.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.eager.SendTensorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.eager.SendTensorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.eager.SendTensorResponse.displayName = 'proto.tensorflow.eager.SendTensorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.eager.SendTensorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.eager.SendTensorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.eager.SendTensorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.SendTensorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.eager.SendTensorResponse}
 */
proto.tensorflow.eager.SendTensorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.eager.SendTensorResponse;
  return proto.tensorflow.eager.SendTensorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.eager.SendTensorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.eager.SendTensorResponse}
 */
proto.tensorflow.eager.SendTensorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.eager.SendTensorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.eager.SendTensorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.eager.SendTensorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.eager.SendTensorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.tensorflow.eager);
