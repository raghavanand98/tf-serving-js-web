/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorflow_serving_apis_classification_pb = require('../../tensorflow_serving/apis/classification_pb.js');
var tensorflow_serving_apis_inference_pb = require('../../tensorflow_serving/apis/inference_pb.js');
var tensorflow_serving_apis_predict_pb = require('../../tensorflow_serving/apis/predict_pb.js');
var tensorflow_serving_apis_regression_pb = require('../../tensorflow_serving/apis/regression_pb.js');
var tensorflow_serving_apis_session_service_pb = require('../../tensorflow_serving/apis/session_service_pb.js');
var tensorflow_serving_core_logging_pb = require('../../tensorflow_serving/core/logging_pb.js');
goog.exportSymbol('proto.tensorflow.serving.ClassifyLog', null, global);
goog.exportSymbol('proto.tensorflow.serving.MultiInferenceLog', null, global);
goog.exportSymbol('proto.tensorflow.serving.PredictLog', null, global);
goog.exportSymbol('proto.tensorflow.serving.PredictionLog', null, global);
goog.exportSymbol('proto.tensorflow.serving.RegressLog', null, global);
goog.exportSymbol('proto.tensorflow.serving.SessionRunLog', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.ClassifyLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.ClassifyLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.ClassifyLog.displayName = 'proto.tensorflow.serving.ClassifyLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.ClassifyLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.ClassifyLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.ClassifyLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ClassifyLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && tensorflow_serving_apis_classification_pb.ClassificationRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && tensorflow_serving_apis_classification_pb.ClassificationResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.ClassifyLog}
 */
proto.tensorflow.serving.ClassifyLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.ClassifyLog;
  return proto.tensorflow.serving.ClassifyLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.ClassifyLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.ClassifyLog}
 */
proto.tensorflow.serving.ClassifyLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_apis_classification_pb.ClassificationRequest;
      reader.readMessage(value,tensorflow_serving_apis_classification_pb.ClassificationRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new tensorflow_serving_apis_classification_pb.ClassificationResponse;
      reader.readMessage(value,tensorflow_serving_apis_classification_pb.ClassificationResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.ClassifyLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.ClassifyLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.ClassifyLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ClassifyLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_apis_classification_pb.ClassificationRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_serving_apis_classification_pb.ClassificationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClassificationRequest request = 1;
 * @return {?proto.tensorflow.serving.ClassificationRequest}
 */
proto.tensorflow.serving.ClassifyLog.prototype.getRequest = function() {
  return /** @type{?proto.tensorflow.serving.ClassificationRequest} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_classification_pb.ClassificationRequest, 1));
};


/** @param {?proto.tensorflow.serving.ClassificationRequest|undefined} value */
proto.tensorflow.serving.ClassifyLog.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.ClassifyLog.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ClassifyLog.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClassificationResponse response = 2;
 * @return {?proto.tensorflow.serving.ClassificationResponse}
 */
proto.tensorflow.serving.ClassifyLog.prototype.getResponse = function() {
  return /** @type{?proto.tensorflow.serving.ClassificationResponse} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_classification_pb.ClassificationResponse, 2));
};


/** @param {?proto.tensorflow.serving.ClassificationResponse|undefined} value */
proto.tensorflow.serving.ClassifyLog.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.serving.ClassifyLog.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ClassifyLog.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.RegressLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.RegressLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.RegressLog.displayName = 'proto.tensorflow.serving.RegressLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.RegressLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.RegressLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.RegressLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.RegressLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && tensorflow_serving_apis_regression_pb.RegressionRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && tensorflow_serving_apis_regression_pb.RegressionResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.RegressLog}
 */
proto.tensorflow.serving.RegressLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.RegressLog;
  return proto.tensorflow.serving.RegressLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.RegressLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.RegressLog}
 */
proto.tensorflow.serving.RegressLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_apis_regression_pb.RegressionRequest;
      reader.readMessage(value,tensorflow_serving_apis_regression_pb.RegressionRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new tensorflow_serving_apis_regression_pb.RegressionResponse;
      reader.readMessage(value,tensorflow_serving_apis_regression_pb.RegressionResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.RegressLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.RegressLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.RegressLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.RegressLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_apis_regression_pb.RegressionRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_serving_apis_regression_pb.RegressionResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional RegressionRequest request = 1;
 * @return {?proto.tensorflow.serving.RegressionRequest}
 */
proto.tensorflow.serving.RegressLog.prototype.getRequest = function() {
  return /** @type{?proto.tensorflow.serving.RegressionRequest} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_regression_pb.RegressionRequest, 1));
};


/** @param {?proto.tensorflow.serving.RegressionRequest|undefined} value */
proto.tensorflow.serving.RegressLog.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.RegressLog.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.RegressLog.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RegressionResponse response = 2;
 * @return {?proto.tensorflow.serving.RegressionResponse}
 */
proto.tensorflow.serving.RegressLog.prototype.getResponse = function() {
  return /** @type{?proto.tensorflow.serving.RegressionResponse} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_regression_pb.RegressionResponse, 2));
};


/** @param {?proto.tensorflow.serving.RegressionResponse|undefined} value */
proto.tensorflow.serving.RegressLog.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.serving.RegressLog.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.RegressLog.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.PredictLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.PredictLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.PredictLog.displayName = 'proto.tensorflow.serving.PredictLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.PredictLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.PredictLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.PredictLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.PredictLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && tensorflow_serving_apis_predict_pb.PredictRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && tensorflow_serving_apis_predict_pb.PredictResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.PredictLog}
 */
proto.tensorflow.serving.PredictLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.PredictLog;
  return proto.tensorflow.serving.PredictLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.PredictLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.PredictLog}
 */
proto.tensorflow.serving.PredictLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_apis_predict_pb.PredictRequest;
      reader.readMessage(value,tensorflow_serving_apis_predict_pb.PredictRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new tensorflow_serving_apis_predict_pb.PredictResponse;
      reader.readMessage(value,tensorflow_serving_apis_predict_pb.PredictResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.PredictLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.PredictLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.PredictLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.PredictLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_apis_predict_pb.PredictRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_serving_apis_predict_pb.PredictResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional PredictRequest request = 1;
 * @return {?proto.tensorflow.serving.PredictRequest}
 */
proto.tensorflow.serving.PredictLog.prototype.getRequest = function() {
  return /** @type{?proto.tensorflow.serving.PredictRequest} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_predict_pb.PredictRequest, 1));
};


/** @param {?proto.tensorflow.serving.PredictRequest|undefined} value */
proto.tensorflow.serving.PredictLog.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.PredictLog.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictLog.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PredictResponse response = 2;
 * @return {?proto.tensorflow.serving.PredictResponse}
 */
proto.tensorflow.serving.PredictLog.prototype.getResponse = function() {
  return /** @type{?proto.tensorflow.serving.PredictResponse} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_predict_pb.PredictResponse, 2));
};


/** @param {?proto.tensorflow.serving.PredictResponse|undefined} value */
proto.tensorflow.serving.PredictLog.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.serving.PredictLog.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictLog.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.MultiInferenceLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.MultiInferenceLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.MultiInferenceLog.displayName = 'proto.tensorflow.serving.MultiInferenceLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.MultiInferenceLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.MultiInferenceLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.MultiInferenceLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && tensorflow_serving_apis_inference_pb.MultiInferenceRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && tensorflow_serving_apis_inference_pb.MultiInferenceResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.MultiInferenceLog}
 */
proto.tensorflow.serving.MultiInferenceLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.MultiInferenceLog;
  return proto.tensorflow.serving.MultiInferenceLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.MultiInferenceLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.MultiInferenceLog}
 */
proto.tensorflow.serving.MultiInferenceLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_apis_inference_pb.MultiInferenceRequest;
      reader.readMessage(value,tensorflow_serving_apis_inference_pb.MultiInferenceRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new tensorflow_serving_apis_inference_pb.MultiInferenceResponse;
      reader.readMessage(value,tensorflow_serving_apis_inference_pb.MultiInferenceResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.MultiInferenceLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.MultiInferenceLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.MultiInferenceLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_apis_inference_pb.MultiInferenceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_serving_apis_inference_pb.MultiInferenceResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional MultiInferenceRequest request = 1;
 * @return {?proto.tensorflow.serving.MultiInferenceRequest}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.getRequest = function() {
  return /** @type{?proto.tensorflow.serving.MultiInferenceRequest} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_inference_pb.MultiInferenceRequest, 1));
};


/** @param {?proto.tensorflow.serving.MultiInferenceRequest|undefined} value */
proto.tensorflow.serving.MultiInferenceLog.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.MultiInferenceLog.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MultiInferenceResponse response = 2;
 * @return {?proto.tensorflow.serving.MultiInferenceResponse}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.getResponse = function() {
  return /** @type{?proto.tensorflow.serving.MultiInferenceResponse} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_inference_pb.MultiInferenceResponse, 2));
};


/** @param {?proto.tensorflow.serving.MultiInferenceResponse|undefined} value */
proto.tensorflow.serving.MultiInferenceLog.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.serving.MultiInferenceLog.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.MultiInferenceLog.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.SessionRunLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.SessionRunLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.SessionRunLog.displayName = 'proto.tensorflow.serving.SessionRunLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.SessionRunLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.SessionRunLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.SessionRunLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.SessionRunLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && tensorflow_serving_apis_session_service_pb.SessionRunRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && tensorflow_serving_apis_session_service_pb.SessionRunResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.SessionRunLog}
 */
proto.tensorflow.serving.SessionRunLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.SessionRunLog;
  return proto.tensorflow.serving.SessionRunLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.SessionRunLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.SessionRunLog}
 */
proto.tensorflow.serving.SessionRunLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_apis_session_service_pb.SessionRunRequest;
      reader.readMessage(value,tensorflow_serving_apis_session_service_pb.SessionRunRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new tensorflow_serving_apis_session_service_pb.SessionRunResponse;
      reader.readMessage(value,tensorflow_serving_apis_session_service_pb.SessionRunResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.SessionRunLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.SessionRunLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.SessionRunLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.SessionRunLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_apis_session_service_pb.SessionRunRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tensorflow_serving_apis_session_service_pb.SessionRunResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional SessionRunRequest request = 1;
 * @return {?proto.tensorflow.serving.SessionRunRequest}
 */
proto.tensorflow.serving.SessionRunLog.prototype.getRequest = function() {
  return /** @type{?proto.tensorflow.serving.SessionRunRequest} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_session_service_pb.SessionRunRequest, 1));
};


/** @param {?proto.tensorflow.serving.SessionRunRequest|undefined} value */
proto.tensorflow.serving.SessionRunLog.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.SessionRunLog.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.SessionRunLog.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SessionRunResponse response = 2;
 * @return {?proto.tensorflow.serving.SessionRunResponse}
 */
proto.tensorflow.serving.SessionRunLog.prototype.getResponse = function() {
  return /** @type{?proto.tensorflow.serving.SessionRunResponse} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_apis_session_service_pb.SessionRunResponse, 2));
};


/** @param {?proto.tensorflow.serving.SessionRunResponse|undefined} value */
proto.tensorflow.serving.SessionRunLog.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.serving.SessionRunLog.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.SessionRunLog.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.PredictionLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.serving.PredictionLog.oneofGroups_);
};
goog.inherits(proto.tensorflow.serving.PredictionLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.PredictionLog.displayName = 'proto.tensorflow.serving.PredictionLog';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.serving.PredictionLog.oneofGroups_ = [[2,3,6,4,5]];

/**
 * @enum {number}
 */
proto.tensorflow.serving.PredictionLog.LogTypeCase = {
  LOG_TYPE_NOT_SET: 0,
  CLASSIFY_LOG: 2,
  REGRESS_LOG: 3,
  PREDICT_LOG: 6,
  MULTI_INFERENCE_LOG: 4,
  SESSION_RUN_LOG: 5
};

/**
 * @return {proto.tensorflow.serving.PredictionLog.LogTypeCase}
 */
proto.tensorflow.serving.PredictionLog.prototype.getLogTypeCase = function() {
  return /** @type {proto.tensorflow.serving.PredictionLog.LogTypeCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.serving.PredictionLog.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.PredictionLog.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.PredictionLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.PredictionLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.PredictionLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    logMetadata: (f = msg.getLogMetadata()) && tensorflow_serving_core_logging_pb.LogMetadata.toObject(includeInstance, f),
    classifyLog: (f = msg.getClassifyLog()) && proto.tensorflow.serving.ClassifyLog.toObject(includeInstance, f),
    regressLog: (f = msg.getRegressLog()) && proto.tensorflow.serving.RegressLog.toObject(includeInstance, f),
    predictLog: (f = msg.getPredictLog()) && proto.tensorflow.serving.PredictLog.toObject(includeInstance, f),
    multiInferenceLog: (f = msg.getMultiInferenceLog()) && proto.tensorflow.serving.MultiInferenceLog.toObject(includeInstance, f),
    sessionRunLog: (f = msg.getSessionRunLog()) && proto.tensorflow.serving.SessionRunLog.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.PredictionLog}
 */
proto.tensorflow.serving.PredictionLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.PredictionLog;
  return proto.tensorflow.serving.PredictionLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.PredictionLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.PredictionLog}
 */
proto.tensorflow.serving.PredictionLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorflow_serving_core_logging_pb.LogMetadata;
      reader.readMessage(value,tensorflow_serving_core_logging_pb.LogMetadata.deserializeBinaryFromReader);
      msg.setLogMetadata(value);
      break;
    case 2:
      var value = new proto.tensorflow.serving.ClassifyLog;
      reader.readMessage(value,proto.tensorflow.serving.ClassifyLog.deserializeBinaryFromReader);
      msg.setClassifyLog(value);
      break;
    case 3:
      var value = new proto.tensorflow.serving.RegressLog;
      reader.readMessage(value,proto.tensorflow.serving.RegressLog.deserializeBinaryFromReader);
      msg.setRegressLog(value);
      break;
    case 6:
      var value = new proto.tensorflow.serving.PredictLog;
      reader.readMessage(value,proto.tensorflow.serving.PredictLog.deserializeBinaryFromReader);
      msg.setPredictLog(value);
      break;
    case 4:
      var value = new proto.tensorflow.serving.MultiInferenceLog;
      reader.readMessage(value,proto.tensorflow.serving.MultiInferenceLog.deserializeBinaryFromReader);
      msg.setMultiInferenceLog(value);
      break;
    case 5:
      var value = new proto.tensorflow.serving.SessionRunLog;
      reader.readMessage(value,proto.tensorflow.serving.SessionRunLog.deserializeBinaryFromReader);
      msg.setSessionRunLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.PredictionLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.PredictionLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.PredictionLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.PredictionLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tensorflow_serving_core_logging_pb.LogMetadata.serializeBinaryToWriter
    );
  }
  f = message.getClassifyLog();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.serving.ClassifyLog.serializeBinaryToWriter
    );
  }
  f = message.getRegressLog();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.serving.RegressLog.serializeBinaryToWriter
    );
  }
  f = message.getPredictLog();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.serving.PredictLog.serializeBinaryToWriter
    );
  }
  f = message.getMultiInferenceLog();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.serving.MultiInferenceLog.serializeBinaryToWriter
    );
  }
  f = message.getSessionRunLog();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.serving.SessionRunLog.serializeBinaryToWriter
    );
  }
};


/**
 * optional LogMetadata log_metadata = 1;
 * @return {?proto.tensorflow.serving.LogMetadata}
 */
proto.tensorflow.serving.PredictionLog.prototype.getLogMetadata = function() {
  return /** @type{?proto.tensorflow.serving.LogMetadata} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_core_logging_pb.LogMetadata, 1));
};


/** @param {?proto.tensorflow.serving.LogMetadata|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setLogMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearLogMetadata = function() {
  this.setLogMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasLogMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClassifyLog classify_log = 2;
 * @return {?proto.tensorflow.serving.ClassifyLog}
 */
proto.tensorflow.serving.PredictionLog.prototype.getClassifyLog = function() {
  return /** @type{?proto.tensorflow.serving.ClassifyLog} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.ClassifyLog, 2));
};


/** @param {?proto.tensorflow.serving.ClassifyLog|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setClassifyLog = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.serving.PredictionLog.oneofGroups_[0], value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearClassifyLog = function() {
  this.setClassifyLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasClassifyLog = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RegressLog regress_log = 3;
 * @return {?proto.tensorflow.serving.RegressLog}
 */
proto.tensorflow.serving.PredictionLog.prototype.getRegressLog = function() {
  return /** @type{?proto.tensorflow.serving.RegressLog} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.RegressLog, 3));
};


/** @param {?proto.tensorflow.serving.RegressLog|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setRegressLog = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.tensorflow.serving.PredictionLog.oneofGroups_[0], value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearRegressLog = function() {
  this.setRegressLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasRegressLog = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PredictLog predict_log = 6;
 * @return {?proto.tensorflow.serving.PredictLog}
 */
proto.tensorflow.serving.PredictionLog.prototype.getPredictLog = function() {
  return /** @type{?proto.tensorflow.serving.PredictLog} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.PredictLog, 6));
};


/** @param {?proto.tensorflow.serving.PredictLog|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setPredictLog = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.tensorflow.serving.PredictionLog.oneofGroups_[0], value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearPredictLog = function() {
  this.setPredictLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasPredictLog = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MultiInferenceLog multi_inference_log = 4;
 * @return {?proto.tensorflow.serving.MultiInferenceLog}
 */
proto.tensorflow.serving.PredictionLog.prototype.getMultiInferenceLog = function() {
  return /** @type{?proto.tensorflow.serving.MultiInferenceLog} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.MultiInferenceLog, 4));
};


/** @param {?proto.tensorflow.serving.MultiInferenceLog|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setMultiInferenceLog = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.tensorflow.serving.PredictionLog.oneofGroups_[0], value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearMultiInferenceLog = function() {
  this.setMultiInferenceLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasMultiInferenceLog = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SessionRunLog session_run_log = 5;
 * @return {?proto.tensorflow.serving.SessionRunLog}
 */
proto.tensorflow.serving.PredictionLog.prototype.getSessionRunLog = function() {
  return /** @type{?proto.tensorflow.serving.SessionRunLog} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.SessionRunLog, 5));
};


/** @param {?proto.tensorflow.serving.SessionRunLog|undefined} value */
proto.tensorflow.serving.PredictionLog.prototype.setSessionRunLog = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.tensorflow.serving.PredictionLog.oneofGroups_[0], value);
};


proto.tensorflow.serving.PredictionLog.prototype.clearSessionRunLog = function() {
  this.setSessionRunLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.PredictionLog.prototype.hasSessionRunLog = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.tensorflow.serving);
